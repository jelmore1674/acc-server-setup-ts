{"version":3,"sources":["../../../js/src/dom/selector-engine.js","../../../js/src/util/index.js","../../../js/src/dom/event-handler.js","../../../js/src/dom/data.js","../../../js/src/base-component.js","../../../js/src/alert.js","../../../js/src/button.js","../../../js/src/dom/manipulator.js","../../../js/src/carousel.js","../../../js/src/collapse.js","../../../js/src/dropdown.js","../../../js/src/util/scrollbar.js","../../../js/src/util/backdrop.js","../../../js/src/modal.js","../../../js/src/offcanvas.js","../../../js/src/util/sanitizer.js","../../../js/src/tooltip.js","../../../js/src/popover.js","../../../js/src/scrollspy.js","../../../js/src/tab.js","../../../js/src/toast.js","components/Sessions.tsx","components/Input.tsx","Routes/Event/event.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SelectorEngine","element","document","concat","parents","ancestor","previous","next","nextElementSibling","selector","hrefAttr","getSelectorFromElement","getSelector","getElementFromSelector","transitionDuration","parseFloat","Number","floatTransitionDelay","isElement","obj","jquery","typeCheckConfig","componentName","valueType","isVisible","getUID","prefix","getComputedStyle","noop","getjQuery","readyState","addEventListener","DOMContentLoadedCallbacks","callback","$","jQueryInterface","execute","waitForTransition","executeAfterTransition","defineJQueryPlugin","onDOMContentLoaded","emulatedDuration","called","transitionElement","setTimeout","triggerTransitionEnd","getNextActiveElement","uidEvent","stripNameRegex","stripUidRegex","getUidEvent","eventRegistry","event","EventHandler","target","isNative","nativeEvents","fn","delegation","bootstrapDelegationHandler","delegationSelector","oneOff","events","removeNamespacedHandlers","Object","storeElementEvent","getTypeEvent","one","addHandler","originalTypeEvent","delegationFn","isNamespace","removeHandler","elementEvent","i","typeEvent","handler","inNamespace","jQueryEvent","bubbles","isPropagationStopped","defaultPrevented","evt","initEvent","preventDefault","instanceMap","cancelable","elementMap","BaseComponent","DATA_KEY","getOwnPropertyNames","getOrCreateInstance","VERSION","NAME","SELECTOR_DISMISS","EVENT_CLOSED","CLASS_NAME_ALERT","rootElement","_removeElement","handleDismiss","alertInstance","button","normalizeData","data","val","key","Manipulator","pureKey","charAt","ARROW_RIGHT_KEY","CLASS_NAME_POINTER_EVENT","SELECTOR_ACTIVE","SELECTOR_NEXT_PREV","SELECTOR_DATA_RIDE","POINTER_TYPE_TOUCH","_items","EVENT_SLIDE","EVENT_KEY","_getConfig","_addEventListeners","Default","nextWhenVisible","_slide","ORDER_PREV","config","getDataAttributes","_handleSwipe","Math","_addTouchEventListeners","this","start","touchDeltaX","end","direction","order","eventDirectionName","targetIndex","_setActiveIndicatorElement","_indicatorsElement","indicators","_updateInterval","defaultInterval","isCycling","Boolean","nextElement","activeElement","nextElementIndex","_element","contains","CLASS_NAME_SLIDE","triggerSlidEvent","_directionToOrder","DIRECTION_LEFT","_orderToDirection","_activeElement","_config","action","TypeError","Carousel","classList","slideIndex","EVENT_CLICK_DATA_API","len","carousels","carouselInterface","DATA_API_KEY","DefaultType","EVENT_SHOW","EVENT_HIDDEN","CLASS_NAME_SHOW","CLASS_NAME_COLLAPSE","CLASS_NAME_COLLAPSED","SELECTOR_ACTIVES","SELECTOR_DATA_TOGGLE","toggleList","toggle","actives","_isTransitioning","startEvent","elemActive","container","activesData","Data","Collapse","_triggerArray","setTransitioning","capitalizedDimension","dimension","CLASS_NAME_COLLAPSING","trigger","_getDimension","_getParent","parent","selected","_addAriaAndCollapsedClass","elem","triggerArray","collapseInterface","selectorElements","triggerData","SPACE_KEY","RIGHT_MOUSE_BUTTON","CLASS_NAME_DROPUP","CLASS_NAME_DROPSTART","SELECTOR_NAVBAR_NAV","PLACEMENT_TOP","PLACEMENT_TOPEND","PLACEMENT_BOTTOM","PLACEMENT_BOTTOMEND","reference","constructor","showEvent","relatedTarget","referenceElement","popperConfig","isDisplayStatic","createPopper","Popper","isDisabled","_popper","EVENT_CLICK","setAttribute","_detectNavbar","_getOffset","popperData","name","options","offset","defaultBsPopperConfig","enabled","_selectMenuItem","composedPath","context","getParentFromElement","dataApiKeydownHandler","getToggleButton","Dropdown","ARROW_UP_KEY","EVENT_KEYDOWN_DATA_API","SELECTOR_FIXED_CONTENT","SELECTOR_STICKY_CONTENT","_setElementAttributes","_disableOverFlow","scrollbarWidth","calculatedValue","window","_applyManipulationCallback","_resetElementAttributes","_saveInitialAttribute","styleProp","value","getDataAttribute","removeDataAttribute","backdrop","CLASS_NAME_BACKDROP","getElement","_isAppended","EVENT_HIDE_PREVENTED","EVENT_CLICK_DISMISS","EVENT_MOUSEUP_DISMISS","CLASS_NAME_FADE","SELECTOR_DIALOG","_backdrop","_initializeBackDrop","show","_isShown","hideEvent","dispose","isAnimated","_adjustDialog","_showElement","_isAnimated","modalBody","style","removeAttribute","reflow","_enforceFocus","_hideModal","_scrollBar","_showBackdrop","_ignoreBackdropClick","_triggerBackdropTransition","isModalOverflowing","overflowY","_resetAdjustments","ESCAPE_KEY","OPEN_SELECTOR","EVENT_KEYDOWN_DISMISS","_enforceFocusOnElement","completeCallBack","ScrollBarHelper","EVENT_FOCUSIN","allReadyOpen","Offcanvas","ARIA_ATTRIBUTE_PATTERN","attrName","attr","SAFE_URL_PATTERN","regExp","allowedAttributeList","DefaultAllowlist","unsafeHtml","elName","allowlistKeys","el","attributeList","html","placement","boundary","customClass","sanitize","sanitizeFn","AttachmentMap","AUTO","RIGHT","template","Event","CLASS_NAME_MODAL","SELECTOR_TOOLTIP_INNER","TRIGGER_HOVER","_isEnabled","_hoverState","_setListeners","_activeTrigger","_isWithActiveTrigger","_enter","clearTimeout","shadowRoot","findShadowRoot","isInTheDom","animation","INSERTED","MOUSEENTER","complete","getTipElement","content","sanitizeHtml","getTitle","attachment","dataKey","delegateTarget","isWithContent","setContent","tip","setElementContent","fallbackPlacements","phase","_getAttachment","triggers","_timeout","_getDelegateConfig","tabClass","_handlePopperPlacementChange","state","popper","_addAttachmentClass","Tooltip","SELECTOR_CONTENT","_getContent","token","Popover","SELECTOR_NAV_ITEMS","EVENT_SCROLL","EVENT_LOAD_DATA_API","CLASS_NAME_DROPDOWN_ITEM","SELECTOR_DATA_SPY","METHOD_OFFSET","_activeTarget","offsetMethod","METHOD_POSITION","targetSelector","targetBCR","targets","_scrollElement","id","scrollHeight","_getScrollHeight","maxScroll","isActiveTarget","_activate","CLASS_NAME_ACTIVE","link","EVENT_ACTIVATE","EVENT_SHOWN","CLASS_NAME_DROPDOWN_MENU","SELECTOR_ACTIVE_UL","listElement","activeElements","isTransitioning","active","EVENT_MOUSEOVER","EVENT_FOCUSOUT","autohide","SELECTOR_DATA_DISMISS","_maybeScheduleHide","_onInteraction","_clearTimeout","Sessions","sessionsArr","setSessionsArr","eventJSON","setEventJSON","rows","setRows","defaultSessionDuration","defaultHourOfDay","defaultDayOfWeekend","defaultTimeMultiplier","defaultSessionType","React","useState","addedToArray","setAdded","sessionType","setSessionType","dayOfWeekend","setDayOfWeekend","timeMulitplier","setTimeMulitplier","sessionDuration","setSessionDuration","hourOfDay","setHourOfDay","rowRef","useRef","current","tooltipDay","tooltipType","tooltipTime","tooltipDuration","tooltipTimeMultiplier","useEffect","title","selectedSession","sessions","className","ref","onChange","e","parsedDate","parseInt","type","min","max","onClick","length","splice","color","Input","valueName","label","handledChange","isChecked","refs","htmlFor","checked","defaultSession","defaultEvent","track","TrackList","tracks","trackName","preRaceWaitingTimeSeconds","sessionOverTimeSeconds","ambientTemp","cloudLevel","rain","weatherRandomness","configVersion","defaultSettings","serverName","adminPassword","carGroup","trackMedalsRequirement","safetyRatingRequirement","racecraftRatingRequirement","password","spectatorPassword","maxCarSlots","dumpLeaderboards","isRaceLocked","randomizeTrackWhenEmpty","allowAutoDQ","shortFormationLap","dumpEntryList","formationLapType","defaultEventRules","qualifyStandingType","pitWindowLengthSec","mandatoryPitstopCount","isRefuellingAllowedInRace","isRefuellingTimeFixed","isMandatoryPitstopRefuellingRequired","isMandatoryPitstopTyreChangeRequired","tyreSetCount","driverStintTimeSec","EventRoute","year","setYear","setTrack","settingsJSON","setSettingsJSON","eventRulesJSON","setEventRulesJSON","isPrivateServer","setIsPrivateServer","mandatoryPit","setMandatoryPit","tooltipRef","tooltipServerName","tooltipAdminPass","tooltipSpecPass","tooltipCarGroup","tooltipTrackMedals","tooltipSafety","tooltipRaceCraft","tooltipCarSlots","tooltipTemp","tooltipClouds","tooltipRain","tooltipRandomness","tooltipTireSets","tooltipServerPassword","tooltipRefuelingAllowed","tooltipFixedRefuellingTime","tooltipNumberOfMandatoryPitstops","tooltipPitWindow","tooltipMandatoryTireChange","tooltipMandatoryRefuelling","handleSelectTrack","rounded","parsed","handleSettingsJSON","handleEventRules","convertedToSec","selectedYear","y","handleYearChange","map","index","session","prev","console","log","href","encodeURIComponent","JSON","stringify","download","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35e0a5d6.chunk.js","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NODE_TEXT = 3\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children)\n      .filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n\n    let ancestor = element.parentNode\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n      if (ancestor.matches(selector)) {\n        parents.push(ancestor)\n      }\n\n      ancestor = ancestor.parentNode\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  }\n}\n\nexport default SelectorEngine\n","import SelectorEngine from '../dom/selector-engine'\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nconst toType = obj => {\n  if (obj === null || obj === undefined) {\n    return `${obj}`\n  }\n\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttr = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttr || (!hrefAttr.includes('#') && !hrefAttr.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttr.includes('#') && !hrefAttr.startsWith('#')) {\n      hrefAttr = `#${hrefAttr.split('#')[1]}`\n    }\n\n    selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : null\n  }\n\n  return selector\n}\n\nconst getSelectorFromElement = element => {\n  const selector = getSelector(element)\n\n  if (selector) {\n    return document.querySelector(selector) ? selector : null\n  }\n\n  return null\n}\n\nconst getElementFromSelector = element => {\n  const selector = getSelector(element)\n\n  return selector ? document.querySelector(selector) : null\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = obj => {\n  if (!obj || typeof obj !== 'object') {\n    return false\n  }\n\n  if (typeof obj.jquery !== 'undefined') {\n    obj = obj[0]\n  }\n\n  return typeof obj.nodeType !== 'undefined'\n}\n\nconst getElement = obj => {\n  if (isElement(obj)) { // it's a jQuery object or a node element\n    return obj.jquery ? obj[0] : obj\n  }\n\n  if (typeof obj === 'string' && obj.length > 0) {\n    return SelectorEngine.findOne(obj)\n  }\n\n  return null\n}\n\nconst typeCheckConfig = (componentName, config, configTypes) => {\n  Object.keys(configTypes).forEach(property => {\n    const expectedTypes = configTypes[property]\n    const value = config[property]\n    const valueType = value && isElement(value) ? 'element' : toType(value)\n\n    if (!new RegExp(expectedTypes).test(valueType)) {\n      throw new TypeError(\n        `${componentName.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n      )\n    }\n  })\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  return getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\nconst reflow = element => element.offsetHeight\n\nconst getjQuery = () => {\n  const { jQuery } = window\n\n  if (jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        DOMContentLoadedCallbacks.forEach(callback => callback())\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = callback => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return list[!shouldGetNext && isCycleAllowed ? list.length - 1 : 0]\n  }\n\n  const listLength = list.length\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport {\n  getElement,\n  getUID,\n  getSelectorFromElement,\n  getElementFromSelector,\n  getTransitionDurationFromElement,\n  triggerTransitionEnd,\n  isElement,\n  typeCheckConfig,\n  isVisible,\n  isDisabled,\n  findShadowRoot,\n  noop,\n  getNextActiveElement,\n  reflow,\n  getjQuery,\n  onDOMContentLoaded,\n  isRTL,\n  defineJQueryPlugin,\n  execute,\n  executeAfterTransition\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\nconst customEventsRegex = /^(mouseenter|mouseleave)/i\nconst nativeEvents = new Set([\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n])\n\n/**\n * ------------------------------------------------------------------------\n * Private methods\n * ------------------------------------------------------------------------\n */\n\nfunction getUidEvent(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getEvent(element) {\n  const uid = getUidEvent(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    event.delegateTarget = element\n\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (let i = domElements.length; i--;) {\n        if (domElements[i] === target) {\n          event.delegateTarget = target\n\n          if (handler.oneOff) {\n            // eslint-disable-next-line unicorn/consistent-destructuring\n            EventHandler.off(element, event.type, selector, fn)\n          }\n\n          return fn.apply(target, [event])\n        }\n      }\n    }\n\n    // To please ESLint\n    return null\n  }\n}\n\nfunction findHandler(events, handler, delegationSelector = null) {\n  const uidEventList = Object.keys(events)\n\n  for (let i = 0, len = uidEventList.length; i < len; i++) {\n    const event = events[uidEventList[i]]\n\n    if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {\n      return event\n    }\n  }\n\n  return null\n}\n\nfunction normalizeParams(originalTypeEvent, handler, delegationFn) {\n  const delegation = typeof handler === 'string'\n  const originalHandler = delegation ? delegationFn : handler\n\n  let typeEvent = getTypeEvent(originalTypeEvent)\n  const isNative = nativeEvents.has(typeEvent)\n\n  if (!isNative) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [delegation, originalHandler, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  if (!handler) {\n    handler = delegationFn\n    delegationFn = null\n  }\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (customEventsRegex.test(originalTypeEvent)) {\n    const wrapFn = fn => {\n      return function (event) {\n        if (!event.relatedTarget || (event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget))) {\n          return fn.call(this, event)\n        }\n      }\n    }\n\n    if (delegationFn) {\n      delegationFn = wrapFn(delegationFn)\n    } else {\n      handler = wrapFn(handler)\n    }\n  }\n\n  const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn)\n  const events = getEvent(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null)\n\n  if (previousFn) {\n    previousFn.oneOff = previousFn.oneOff && oneOff\n\n    return\n  }\n\n  const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = delegation ?\n    bootstrapDelegationHandler(element, handler, delegationFn) :\n    bootstrapHandler(element, handler)\n\n  fn.delegationSelector = delegation ? handler : null\n  fn.originalHandler = originalHandler\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, delegation)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  Object.keys(storeElementEvent).forEach(handlerKey => {\n    if (handlerKey.includes(namespace)) {\n      const event = storeElementEvent[handlerKey]\n\n      removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector)\n    }\n  })\n}\n\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '')\n  return customEvents[event] || event\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, false)\n  },\n\n  one(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFn) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getEvent(element)\n    const isNamespace = originalTypeEvent.startsWith('.')\n\n    if (typeof originalHandler !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!events || !events[typeEvent]) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      Object.keys(events).forEach(elementEvent => {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n      })\n    }\n\n    const storeElementEvent = events[typeEvent] || {}\n    Object.keys(storeElementEvent).forEach(keyHandlers => {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        const event = storeElementEvent[keyHandlers]\n\n        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector)\n      }\n    })\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const $ = getjQuery()\n    const typeEvent = getTypeEvent(event)\n    const inNamespace = event !== typeEvent\n    const isNative = nativeEvents.has(typeEvent)\n\n    let jQueryEvent\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n    let evt = null\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    if (isNative) {\n      evt = document.createEvent('HTMLEvents')\n      evt.initEvent(typeEvent, bubbles, true)\n    } else {\n      evt = new CustomEvent(event, {\n        bubbles,\n        cancelable: true\n      })\n    }\n\n    // merge custom information in our event\n    if (typeof args !== 'undefined') {\n      Object.keys(args).forEach(key => {\n        Object.defineProperty(evt, key, {\n          get() {\n            return args[key]\n          }\n        })\n      })\n    }\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nexport default EventHandler\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst elementMap = new Map()\n\nexport default {\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map())\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`)\n      return\n    }\n\n    instanceMap.set(key, instance)\n  },\n\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null\n    }\n\n    return null\n  },\n\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    instanceMap.delete(key)\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element)\n    }\n  }\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data'\nimport {\n  executeAfterTransition,\n  getElement\n} from './util/index'\nimport EventHandler from './dom/event-handler'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst VERSION = '5.0.2'\n\nclass BaseComponent {\n  constructor(element) {\n    element = getElement(element)\n\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    Object.getOwnPropertyNames(this).forEach(propertyName => {\n      this[propertyName] = null\n    })\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  /** Static */\n\n  static getInstance(element) {\n    return Data.get(element, this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n}\n\nexport default BaseComponent\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'alert'\nconst DATA_KEY = 'bs.alert'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst SELECTOR_DISMISS = '[data-bs-dismiss=\"alert\"]'\n\nconst EVENT_CLOSE = `close${EVENT_KEY}`\nconst EVENT_CLOSED = `closed${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_ALERT = 'alert'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Alert extends BaseComponent {\n  // Getters\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  close(element) {\n    const rootElement = element ? this._getRootElement(element) : this._element\n    const customEvent = this._triggerCloseEvent(rootElement)\n\n    if (customEvent === null || customEvent.defaultPrevented) {\n      return\n    }\n\n    this._removeElement(rootElement)\n  }\n\n  // Private\n\n  _getRootElement(element) {\n    return getElementFromSelector(element) || element.closest(`.${CLASS_NAME_ALERT}`)\n  }\n\n  _triggerCloseEvent(element) {\n    return EventHandler.trigger(element, EVENT_CLOSE)\n  }\n\n  _removeElement(element) {\n    element.classList.remove(CLASS_NAME_SHOW)\n\n    const isAnimated = element.classList.contains(CLASS_NAME_FADE)\n    this._queueCallback(() => this._destroyElement(element), element, isAnimated)\n  }\n\n  _destroyElement(element) {\n    element.remove()\n\n    EventHandler.trigger(element, EVENT_CLOSED)\n  }\n\n  // Static\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Alert.getOrCreateInstance(this)\n\n      if (config === 'close') {\n        data[config](this)\n      }\n    })\n  }\n\n  static handleDismiss(alertInstance) {\n    return function (event) {\n      if (event) {\n        event.preventDefault()\n      }\n\n      alertInstance.close(this)\n    }\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DISMISS, Alert.handleDismiss(new Alert()))\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Alert to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Alert)\n\nexport default Alert\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { defineJQueryPlugin } from './util/index'\nimport EventHandler from './dom/event-handler'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'button'\nconst DATA_KEY = 'bs.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst CLASS_NAME_ACTIVE = 'active'\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]'\n\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Button extends BaseComponent {\n  // Getters\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE))\n  }\n\n  // Static\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Button.getOrCreateInstance(this)\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, event => {\n  event.preventDefault()\n\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE)\n  const data = Button.getOrCreateInstance(button)\n\n  data.toggle()\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Button to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Button)\n\nexport default Button\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(val) {\n  if (val === 'true') {\n    return true\n  }\n\n  if (val === 'false') {\n    return false\n  }\n\n  if (val === Number(val).toString()) {\n    return Number(val)\n  }\n\n  if (val === '' || val === 'null') {\n    return null\n  }\n\n  return val\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {}\n\n    Object.keys(element.dataset)\n      .filter(key => key.startsWith('bs'))\n      .forEach(key => {\n        let pureKey = key.replace(/^bs/, '')\n        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length)\n        attributes[pureKey] = normalizeData(element.dataset[key])\n      })\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`))\n  },\n\n  offset(element) {\n    const rect = element.getBoundingClientRect()\n\n    return {\n      top: rect.top + document.body.scrollTop,\n      left: rect.left + document.body.scrollLeft\n    }\n  },\n\n  position(element) {\n    return {\n      top: element.offsetTop,\n      left: element.offsetLeft\n    }\n  }\n}\n\nexport default Manipulator\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isRTL,\n  isVisible,\n  getNextActiveElement,\n  reflow,\n  triggerTransitionEnd,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'carousel'\nconst DATA_KEY = 'bs.carousel'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ARROW_LEFT_KEY = 'ArrowLeft'\nconst ARROW_RIGHT_KEY = 'ArrowRight'\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  slide: false,\n  pause: 'hover',\n  wrap: true,\n  touch: true\n}\n\nconst DefaultType = {\n  interval: '(number|boolean)',\n  keyboard: 'boolean',\n  slide: '(boolean|string)',\n  pause: '(string|boolean)',\n  wrap: 'boolean',\n  touch: 'boolean'\n}\n\nconst ORDER_NEXT = 'next'\nconst ORDER_PREV = 'prev'\nconst DIRECTION_LEFT = 'left'\nconst DIRECTION_RIGHT = 'right'\n\nconst KEY_TO_DIRECTION = {\n  [ARROW_LEFT_KEY]: DIRECTION_RIGHT,\n  [ARROW_RIGHT_KEY]: DIRECTION_LEFT\n}\n\nconst EVENT_SLIDE = `slide${EVENT_KEY}`\nconst EVENT_SLID = `slid${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_CAROUSEL = 'carousel'\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_SLIDE = 'slide'\nconst CLASS_NAME_END = 'carousel-item-end'\nconst CLASS_NAME_START = 'carousel-item-start'\nconst CLASS_NAME_NEXT = 'carousel-item-next'\nconst CLASS_NAME_PREV = 'carousel-item-prev'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\n\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_ACTIVE_ITEM = '.active.carousel-item'\nconst SELECTOR_ITEM = '.carousel-item'\nconst SELECTOR_ITEM_IMG = '.carousel-item img'\nconst SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev'\nconst SELECTOR_INDICATORS = '.carousel-indicators'\nconst SELECTOR_INDICATOR = '[data-bs-target]'\nconst SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]'\nconst SELECTOR_DATA_RIDE = '[data-bs-ride=\"carousel\"]'\n\nconst POINTER_TYPE_TOUCH = 'touch'\nconst POINTER_TYPE_PEN = 'pen'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass Carousel extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._items = null\n    this._interval = null\n    this._activeElement = null\n    this._isPaused = false\n    this._isSliding = false\n    this.touchTimeout = null\n    this.touchStartX = 0\n    this.touchDeltaX = 0\n\n    this._config = this._getConfig(config)\n    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element)\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n    this._pointerEvent = Boolean(window.PointerEvent)\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  next() {\n    this._slide(ORDER_NEXT)\n  }\n\n  nextWhenVisible() {\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && isVisible(this._element)) {\n      this.next()\n    }\n  }\n\n  prev() {\n    this._slide(ORDER_PREV)\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true\n    }\n\n    if (SelectorEngine.findOne(SELECTOR_NEXT_PREV, this._element)) {\n      triggerTransitionEnd(this._element)\n      this.cycle(true)\n    }\n\n    clearInterval(this._interval)\n    this._interval = null\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n\n    if (this._config && this._config.interval && !this._isPaused) {\n      this._updateInterval()\n\n      this._interval = setInterval(\n        (document.visibilityState ? this.nextWhenVisible : this.next).bind(this),\n        this._config.interval\n      )\n    }\n  }\n\n  to(index) {\n    this._activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n    const activeIndex = this._getItemIndex(this._activeElement)\n\n    if (index > this._items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.to(index))\n      return\n    }\n\n    if (activeIndex === index) {\n      this.pause()\n      this.cycle()\n      return\n    }\n\n    const order = index > activeIndex ?\n      ORDER_NEXT :\n      ORDER_PREV\n\n    this._slide(order, this._items[index])\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX)\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltax / this.touchDeltaX\n\n    this.touchDeltaX = 0\n\n    if (!direction) {\n      return\n    }\n\n    this._slide(direction > 0 ? DIRECTION_RIGHT : DIRECTION_LEFT)\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      EventHandler.on(this._element, EVENT_MOUSEENTER, event => this.pause(event))\n      EventHandler.on(this._element, EVENT_MOUSELEAVE, event => this.cycle(event))\n    }\n\n    if (this._config.touch && this._touchSupported) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    const start = event => {\n      if (this._pointerEvent && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH)) {\n        this.touchStartX = event.clientX\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.touches[0].clientX\n      }\n    }\n\n    const move = event => {\n      // ensure swiping with one touch and not pinching\n      this.touchDeltaX = event.touches && event.touches.length > 1 ?\n        0 :\n        event.touches[0].clientX - this.touchStartX\n    }\n\n    const end = event => {\n      if (this._pointerEvent && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH)) {\n        this.touchDeltaX = event.clientX - this.touchStartX\n      }\n\n      this._handleSwipe()\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n\n        this.pause()\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout)\n        }\n\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n      }\n    }\n\n    SelectorEngine.find(SELECTOR_ITEM_IMG, this._element).forEach(itemImg => {\n      EventHandler.on(itemImg, EVENT_DRAG_START, e => e.preventDefault())\n    })\n\n    if (this._pointerEvent) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => start(event))\n      EventHandler.on(this._element, EVENT_POINTERUP, event => end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => start(event))\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => move(event))\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => end(event))\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    const direction = KEY_TO_DIRECTION[event.key]\n    if (direction) {\n      event.preventDefault()\n      this._slide(direction)\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode ?\n      SelectorEngine.find(SELECTOR_ITEM, element.parentNode) :\n      []\n\n    return this._items.indexOf(element)\n  }\n\n  _getItemByOrder(order, activeElement) {\n    const isNext = order === ORDER_NEXT\n    return getNextActiveElement(this._items, activeElement, isNext, this._config.wrap)\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget)\n    const fromIndex = this._getItemIndex(SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element))\n\n    return EventHandler.trigger(this._element, EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    })\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement)\n\n      activeIndicator.classList.remove(CLASS_NAME_ACTIVE)\n      activeIndicator.removeAttribute('aria-current')\n\n      const indicators = SelectorEngine.find(SELECTOR_INDICATOR, this._indicatorsElement)\n\n      for (let i = 0; i < indicators.length; i++) {\n        if (Number.parseInt(indicators[i].getAttribute('data-bs-slide-to'), 10) === this._getItemIndex(element)) {\n          indicators[i].classList.add(CLASS_NAME_ACTIVE)\n          indicators[i].setAttribute('aria-current', 'true')\n          break\n        }\n      }\n    }\n  }\n\n  _updateInterval() {\n    const element = this._activeElement || SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n\n    if (!element) {\n      return\n    }\n\n    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10)\n\n    if (elementInterval) {\n      this._config.defaultInterval = this._config.defaultInterval || this._config.interval\n      this._config.interval = elementInterval\n    } else {\n      this._config.interval = this._config.defaultInterval || this._config.interval\n    }\n  }\n\n  _slide(directionOrOrder, element) {\n    const order = this._directionToOrder(directionOrOrder)\n    const activeElement = SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n    const activeElementIndex = this._getItemIndex(activeElement)\n    const nextElement = element || this._getItemByOrder(order, activeElement)\n\n    const nextElementIndex = this._getItemIndex(nextElement)\n    const isCycling = Boolean(this._interval)\n\n    const isNext = order === ORDER_NEXT\n    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END\n    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV\n    const eventDirectionName = this._orderToDirection(order)\n\n    if (nextElement && nextElement.classList.contains(CLASS_NAME_ACTIVE)) {\n      this._isSliding = false\n      return\n    }\n\n    if (this._isSliding) {\n      return\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName)\n    if (slideEvent.defaultPrevented) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return\n    }\n\n    this._isSliding = true\n\n    if (isCycling) {\n      this.pause()\n    }\n\n    this._setActiveIndicatorElement(nextElement)\n    this._activeElement = nextElement\n\n    const triggerSlidEvent = () => {\n      EventHandler.trigger(this._element, EVENT_SLID, {\n        relatedTarget: nextElement,\n        direction: eventDirectionName,\n        from: activeElementIndex,\n        to: nextElementIndex\n      })\n    }\n\n    if (this._element.classList.contains(CLASS_NAME_SLIDE)) {\n      nextElement.classList.add(orderClassName)\n\n      reflow(nextElement)\n\n      activeElement.classList.add(directionalClassName)\n      nextElement.classList.add(directionalClassName)\n\n      const completeCallBack = () => {\n        nextElement.classList.remove(directionalClassName, orderClassName)\n        nextElement.classList.add(CLASS_NAME_ACTIVE)\n\n        activeElement.classList.remove(CLASS_NAME_ACTIVE, orderClassName, directionalClassName)\n\n        this._isSliding = false\n\n        setTimeout(triggerSlidEvent, 0)\n      }\n\n      this._queueCallback(completeCallBack, activeElement, true)\n    } else {\n      activeElement.classList.remove(CLASS_NAME_ACTIVE)\n      nextElement.classList.add(CLASS_NAME_ACTIVE)\n\n      this._isSliding = false\n      triggerSlidEvent()\n    }\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  _directionToOrder(direction) {\n    if (![DIRECTION_RIGHT, DIRECTION_LEFT].includes(direction)) {\n      return direction\n    }\n\n    if (isRTL()) {\n      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT\n    }\n\n    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV\n  }\n\n  _orderToDirection(order) {\n    if (![ORDER_NEXT, ORDER_PREV].includes(order)) {\n      return order\n    }\n\n    if (isRTL()) {\n      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT\n    }\n\n    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT\n  }\n\n  // Static\n\n  static carouselInterface(element, config) {\n    const data = Carousel.getOrCreateInstance(element, config)\n\n    let { _config } = data\n    if (typeof config === 'object') {\n      _config = {\n        ..._config,\n        ...config\n      }\n    }\n\n    const action = typeof config === 'string' ? config : _config.slide\n\n    if (typeof config === 'number') {\n      data.to(config)\n    } else if (typeof action === 'string') {\n      if (typeof data[action] === 'undefined') {\n        throw new TypeError(`No method named \"${action}\"`)\n      }\n\n      data[action]()\n    } else if (_config.interval && _config.ride) {\n      data.pause()\n      data.cycle()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Carousel.carouselInterface(this, config)\n    })\n  }\n\n  static dataApiClickHandler(event) {\n    const target = getElementFromSelector(this)\n\n    if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {\n      return\n    }\n\n    const config = {\n      ...Manipulator.getDataAttributes(target),\n      ...Manipulator.getDataAttributes(this)\n    }\n    const slideIndex = this.getAttribute('data-bs-slide-to')\n\n    if (slideIndex) {\n      config.interval = false\n    }\n\n    Carousel.carouselInterface(target, config)\n\n    if (slideIndex) {\n      Carousel.getInstance(target).to(slideIndex)\n    }\n\n    event.preventDefault()\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, Carousel.dataApiClickHandler)\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE)\n\n  for (let i = 0, len = carousels.length; i < len; i++) {\n    Carousel.carouselInterface(carousels[i], Carousel.getInstance(carousels[i]))\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Carousel to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Carousel)\n\nexport default Carousel\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElement,\n  getSelectorFromElement,\n  getElementFromSelector,\n  reflow,\n  typeCheckConfig\n} from './util/index'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'collapse'\nconst DATA_KEY = 'bs.collapse'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst Default = {\n  toggle: true,\n  parent: ''\n}\n\nconst DefaultType = {\n  toggle: 'boolean',\n  parent: '(string|element)'\n}\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_COLLAPSE = 'collapse'\nconst CLASS_NAME_COLLAPSING = 'collapsing'\nconst CLASS_NAME_COLLAPSED = 'collapsed'\n\nconst WIDTH = 'width'\nconst HEIGHT = 'height'\n\nconst SELECTOR_ACTIVES = '.show, .collapsing'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._isTransitioning = false\n    this._config = this._getConfig(config)\n    this._triggerArray = SelectorEngine.find(\n      `${SELECTOR_DATA_TOGGLE}[href=\"#${this._element.id}\"],` +\n      `${SELECTOR_DATA_TOGGLE}[data-bs-target=\"#${this._element.id}\"]`\n    )\n\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (let i = 0, len = toggleList.length; i < len; i++) {\n      const elem = toggleList[i]\n      const selector = getSelectorFromElement(elem)\n      const filterElement = SelectorEngine.find(selector)\n        .filter(foundElem => foundElem === this._element)\n\n      if (selector !== null && filterElement.length) {\n        this._selector = selector\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._parent = this._config.parent ? this._getParent() : null\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._element, this._triggerArray)\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle() {\n    if (this._element.classList.contains(CLASS_NAME_SHOW)) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning || this._element.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    let actives\n    let activesData\n\n    if (this._parent) {\n      actives = SelectorEngine.find(SELECTOR_ACTIVES, this._parent)\n        .filter(elem => {\n          if (typeof this._config.parent === 'string') {\n            return elem.getAttribute('data-bs-parent') === this._config.parent\n          }\n\n          return elem.classList.contains(CLASS_NAME_COLLAPSE)\n        })\n\n      if (actives.length === 0) {\n        actives = null\n      }\n    }\n\n    const container = SelectorEngine.findOne(this._selector)\n    if (actives) {\n      const tempActiveData = actives.find(elem => container !== elem)\n      activesData = tempActiveData ? Collapse.getInstance(tempActiveData) : null\n\n      if (activesData && activesData._isTransitioning) {\n        return\n      }\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    if (actives) {\n      actives.forEach(elemActive => {\n        if (container !== elemActive) {\n          Collapse.collapseInterface(elemActive, 'hide')\n        }\n\n        if (!activesData) {\n          Data.set(elemActive, DATA_KEY, null)\n        }\n      })\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.classList.remove(CLASS_NAME_COLLAPSE)\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    if (this._triggerArray.length) {\n      this._triggerArray.forEach(element => {\n        element.classList.remove(CLASS_NAME_COLLAPSED)\n        element.setAttribute('aria-expanded', true)\n      })\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n      this._element.style[dimension] = ''\n\n      this.setTransitioning(false)\n\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n\n    this._queueCallback(complete, this._element, true)\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning || !this._element.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    reflow(this._element)\n\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n    const triggerArrayLength = this._triggerArray.length\n    if (triggerArrayLength > 0) {\n      for (let i = 0; i < triggerArrayLength; i++) {\n        const trigger = this._triggerArray[i]\n        const elem = getElementFromSelector(trigger)\n\n        if (elem && !elem.classList.contains(CLASS_NAME_SHOW)) {\n          trigger.classList.add(CLASS_NAME_COLLAPSED)\n          trigger.setAttribute('aria-expanded', false)\n        }\n      }\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      this.setTransitioning(false)\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n\n    this._queueCallback(complete, this._element, true)\n  }\n\n  setTransitioning(isTransitioning) {\n    this._isTransitioning = isTransitioning\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _getDimension() {\n    return this._element.classList.contains(WIDTH) ? WIDTH : HEIGHT\n  }\n\n  _getParent() {\n    let { parent } = this._config\n\n    parent = getElement(parent)\n\n    const selector = `${SELECTOR_DATA_TOGGLE}[data-bs-parent=\"${parent}\"]`\n\n    SelectorEngine.find(selector, parent)\n      .forEach(element => {\n        const selected = getElementFromSelector(element)\n\n        this._addAriaAndCollapsedClass(\n          selected,\n          [element]\n        )\n      })\n\n    return parent\n  }\n\n  _addAriaAndCollapsedClass(element, triggerArray) {\n    if (!element || !triggerArray.length) {\n      return\n    }\n\n    const isOpen = element.classList.contains(CLASS_NAME_SHOW)\n\n    triggerArray.forEach(elem => {\n      if (isOpen) {\n        elem.classList.remove(CLASS_NAME_COLLAPSED)\n      } else {\n        elem.classList.add(CLASS_NAME_COLLAPSED)\n      }\n\n      elem.setAttribute('aria-expanded', isOpen)\n    })\n  }\n\n  // Static\n\n  static collapseInterface(element, config) {\n    let data = Collapse.getInstance(element)\n    const _config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(element),\n      ...(typeof config === 'object' && config ? config : {})\n    }\n\n    if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false\n    }\n\n    if (!data) {\n      data = new Collapse(element, _config)\n    }\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Collapse.collapseInterface(this, config)\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || (event.delegateTarget && event.delegateTarget.tagName === 'A')) {\n    event.preventDefault()\n  }\n\n  const triggerData = Manipulator.getDataAttributes(this)\n  const selector = getSelectorFromElement(this)\n  const selectorElements = SelectorEngine.find(selector)\n\n  selectorElements.forEach(element => {\n    const data = Collapse.getInstance(element)\n    let config\n    if (data) {\n      // update parent attribute\n      if (data._parent === null && typeof triggerData.parent === 'string') {\n        data._config.parent = triggerData.parent\n        data._parent = data._getParent()\n      }\n\n      config = 'toggle'\n    } else {\n      config = triggerData\n    }\n\n    Collapse.collapseInterface(element, config)\n  })\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Collapse to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Collapse)\n\nexport default Collapse\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from '@popperjs/core'\n\nimport {\n  defineJQueryPlugin,\n  getElement,\n  getElementFromSelector,\n  isDisabled,\n  isElement,\n  isVisible,\n  isRTL,\n  noop,\n  getNextActiveElement,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'dropdown'\nconst DATA_KEY = 'bs.dropdown'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ESCAPE_KEY = 'Escape'\nconst SPACE_KEY = 'Space'\nconst TAB_KEY = 'Tab'\nconst ARROW_UP_KEY = 'ArrowUp'\nconst ARROW_DOWN_KEY = 'ArrowDown'\nconst RIGHT_MOUSE_BUTTON = 2 // MouseEvent.button value for the secondary button, usually the right button\n\nconst REGEXP_KEYDOWN = new RegExp(`${ARROW_UP_KEY}|${ARROW_DOWN_KEY}|${ESCAPE_KEY}`)\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK = `click${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_DROPUP = 'dropup'\nconst CLASS_NAME_DROPEND = 'dropend'\nconst CLASS_NAME_DROPSTART = 'dropstart'\nconst CLASS_NAME_NAVBAR = 'navbar'\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"dropdown\"]'\nconst SELECTOR_MENU = '.dropdown-menu'\nconst SELECTOR_NAVBAR_NAV = '.navbar-nav'\nconst SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n\nconst PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start'\nconst PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end'\nconst PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start'\nconst PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end'\nconst PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start'\nconst PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start'\n\nconst Default = {\n  offset: [0, 2],\n  boundary: 'clippingParents',\n  reference: 'toggle',\n  display: 'dynamic',\n  popperConfig: null,\n  autoClose: true\n}\n\nconst DefaultType = {\n  offset: '(array|string|function)',\n  boundary: '(string|element)',\n  reference: '(string|element|object)',\n  display: 'string',\n  popperConfig: '(null|object|function)',\n  autoClose: '(boolean|string)'\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Dropdown extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._popper = null\n    this._config = this._getConfig(config)\n    this._menu = this._getMenuElement()\n    this._inNavbar = this._detectNavbar()\n\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle() {\n    if (isDisabled(this._element)) {\n      return\n    }\n\n    const isActive = this._element.classList.contains(CLASS_NAME_SHOW)\n\n    if (isActive) {\n      this.hide()\n      return\n    }\n\n    this.show()\n  }\n\n  show() {\n    if (isDisabled(this._element) || this._menu.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const parent = Dropdown.getParentFromElement(this._element)\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, relatedTarget)\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    // Totally disable Popper for Dropdowns in Navbar\n    if (this._inNavbar) {\n      Manipulator.setDataAttribute(this._menu, 'popper', 'none')\n    } else {\n      if (typeof Popper === 'undefined') {\n        throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org)')\n      }\n\n      let referenceElement = this._element\n\n      if (this._config.reference === 'parent') {\n        referenceElement = parent\n      } else if (isElement(this._config.reference)) {\n        referenceElement = getElement(this._config.reference)\n      } else if (typeof this._config.reference === 'object') {\n        referenceElement = this._config.reference\n      }\n\n      const popperConfig = this._getPopperConfig()\n      const isDisplayStatic = popperConfig.modifiers.find(modifier => modifier.name === 'applyStyles' && modifier.enabled === false)\n\n      this._popper = Popper.createPopper(referenceElement, this._menu, popperConfig)\n\n      if (isDisplayStatic) {\n        Manipulator.setDataAttribute(this._menu, 'popper', 'static')\n      }\n    }\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement &&\n      !parent.closest(SELECTOR_NAVBAR_NAV)) {\n      [].concat(...document.body.children)\n        .forEach(elem => EventHandler.on(elem, 'mouseover', noop))\n    }\n\n    this._element.focus()\n    this._element.setAttribute('aria-expanded', true)\n\n    this._menu.classList.toggle(CLASS_NAME_SHOW)\n    this._element.classList.toggle(CLASS_NAME_SHOW)\n    EventHandler.trigger(this._element, EVENT_SHOWN, relatedTarget)\n  }\n\n  hide() {\n    if (isDisabled(this._element) || !this._menu.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    this._completeHide(relatedTarget)\n  }\n\n  dispose() {\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    super.dispose()\n  }\n\n  update() {\n    this._inNavbar = this._detectNavbar()\n    if (this._popper) {\n      this._popper.update()\n    }\n  }\n\n  // Private\n\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_CLICK, event => {\n      event.preventDefault()\n      this.toggle()\n    })\n  }\n\n  _completeHide(relatedTarget) {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE, relatedTarget)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      [].concat(...document.body.children)\n        .forEach(elem => EventHandler.off(elem, 'mouseover', noop))\n    }\n\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    this._menu.classList.remove(CLASS_NAME_SHOW)\n    this._element.classList.remove(CLASS_NAME_SHOW)\n    this._element.setAttribute('aria-expanded', 'false')\n    Manipulator.removeDataAttribute(this._menu, 'popper')\n    EventHandler.trigger(this._element, EVENT_HIDDEN, relatedTarget)\n  }\n\n  _getConfig(config) {\n    config = {\n      ...this.constructor.Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...config\n    }\n\n    typeCheckConfig(NAME, config, this.constructor.DefaultType)\n\n    if (typeof config.reference === 'object' && !isElement(config.reference) &&\n      typeof config.reference.getBoundingClientRect !== 'function'\n    ) {\n      // Popper virtual elements require a getBoundingClientRect method\n      throw new TypeError(`${NAME.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`)\n    }\n\n    return config\n  }\n\n  _getMenuElement() {\n    return SelectorEngine.next(this._element, SELECTOR_MENU)[0]\n  }\n\n  _getPlacement() {\n    const parentDropdown = this._element.parentNode\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n      return PLACEMENT_RIGHT\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n      return PLACEMENT_LEFT\n    }\n\n    // We need to trim the value because custom properties can also include spaces\n    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end'\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP\n    }\n\n    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM\n  }\n\n  _detectNavbar() {\n    return this._element.closest(`.${CLASS_NAME_NAVBAR}`) !== null\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(val => Number.parseInt(val, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _getPopperConfig() {\n    const defaultBsPopperConfig = {\n      placement: this._getPlacement(),\n      modifiers: [{\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      },\n      {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }]\n    }\n\n    // Disable Popper if we have a static display\n    if (this._config.display === 'static') {\n      defaultBsPopperConfig.modifiers = [{\n        name: 'applyStyles',\n        enabled: false\n      }]\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)\n    }\n  }\n\n  _selectMenuItem({ key, target }) {\n    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(isVisible)\n\n    if (!items.length) {\n      return\n    }\n\n    // if target isn't included in items (e.g. when expanding the dropdown)\n    // allow cycling to get the last item in case key equals ARROW_UP_KEY\n    getNextActiveElement(items, target, key === ARROW_DOWN_KEY, !items.includes(target)).focus()\n  }\n\n  // Static\n\n  static dropdownInterface(element, config) {\n    const data = Dropdown.getOrCreateInstance(element, config)\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      Dropdown.dropdownInterface(this, config)\n    })\n  }\n\n  static clearMenus(event) {\n    if (event && (event.button === RIGHT_MOUSE_BUTTON || (event.type === 'keyup' && event.key !== TAB_KEY))) {\n      return\n    }\n\n    const toggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (let i = 0, len = toggles.length; i < len; i++) {\n      const context = Dropdown.getInstance(toggles[i])\n      if (!context || context._config.autoClose === false) {\n        continue\n      }\n\n      if (!context._element.classList.contains(CLASS_NAME_SHOW)) {\n        continue\n      }\n\n      const relatedTarget = {\n        relatedTarget: context._element\n      }\n\n      if (event) {\n        const composedPath = event.composedPath()\n        const isMenuTarget = composedPath.includes(context._menu)\n        if (\n          composedPath.includes(context._element) ||\n          (context._config.autoClose === 'inside' && !isMenuTarget) ||\n          (context._config.autoClose === 'outside' && isMenuTarget)\n        ) {\n          continue\n        }\n\n        // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n        if (context._menu.contains(event.target) && ((event.type === 'keyup' && event.key === TAB_KEY) || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n          continue\n        }\n\n        if (event.type === 'click') {\n          relatedTarget.clickEvent = event\n        }\n      }\n\n      context._completeHide(relatedTarget)\n    }\n  }\n\n  static getParentFromElement(element) {\n    return getElementFromSelector(element) || element.parentNode\n  }\n\n  static dataApiKeydownHandler(event) {\n    // If not input/textarea:\n    //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n    // If input/textarea:\n    //  - If space key => not a dropdown command\n    //  - If key is other than escape\n    //    - If key is not up or down => not a dropdown command\n    //    - If trigger inside the menu => not a dropdown command\n    if (/input|textarea/i.test(event.target.tagName) ?\n      event.key === SPACE_KEY || (event.key !== ESCAPE_KEY &&\n      ((event.key !== ARROW_DOWN_KEY && event.key !== ARROW_UP_KEY) ||\n        event.target.closest(SELECTOR_MENU))) :\n      !REGEXP_KEYDOWN.test(event.key)) {\n      return\n    }\n\n    const isActive = this.classList.contains(CLASS_NAME_SHOW)\n\n    if (!isActive && event.key === ESCAPE_KEY) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (isDisabled(this)) {\n      return\n    }\n\n    const getToggleButton = () => this.matches(SELECTOR_DATA_TOGGLE) ? this : SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE)[0]\n\n    if (event.key === ESCAPE_KEY) {\n      getToggleButton().focus()\n      Dropdown.clearMenus()\n      return\n    }\n\n    if (event.key === ARROW_UP_KEY || event.key === ARROW_DOWN_KEY) {\n      if (!isActive) {\n        getToggleButton().click()\n      }\n\n      Dropdown.getInstance(getToggleButton())._selectMenuItem(event)\n      return\n    }\n\n    if (!isActive || event.key === SPACE_KEY) {\n      Dropdown.clearMenus()\n    }\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_CLICK_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault()\n  Dropdown.dropdownInterface(this)\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Dropdown to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Dropdown)\n\nexport default Dropdown\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine'\nimport Manipulator from '../dom/manipulator'\nimport { isElement } from './index'\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\nconst SELECTOR_STICKY_CONTENT = '.sticky-top'\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body\n  }\n\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth\n    return Math.abs(window.innerWidth - documentWidth)\n  }\n\n  hide() {\n    const width = this.getWidth()\n    this._disableOverFlow()\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, 'paddingRight', calculatedValue => calculatedValue + width)\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight', calculatedValue => calculatedValue + width)\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight', calculatedValue => calculatedValue - width)\n  }\n\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow')\n    this._element.style.overflow = 'hidden'\n  }\n\n  _setElementAttributes(selector, styleProp, callback) {\n    const scrollbarWidth = this.getWidth()\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return\n      }\n\n      this._saveInitialAttribute(element, styleProp)\n      const calculatedValue = window.getComputedStyle(element)[styleProp]\n      element.style[styleProp] = `${callback(Number.parseFloat(calculatedValue))}px`\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow')\n    this._resetElementAttributes(this._element, 'paddingRight')\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, 'paddingRight')\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, 'marginRight')\n  }\n\n  _saveInitialAttribute(element, styleProp) {\n    const actualValue = element.style[styleProp]\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProp, actualValue)\n    }\n  }\n\n  _resetElementAttributes(selector, styleProp) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProp)\n      if (typeof value === 'undefined') {\n        element.style.removeProperty(styleProp)\n      } else {\n        Manipulator.removeDataAttribute(element, styleProp)\n        element.style[styleProp] = value\n      }\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _applyManipulationCallback(selector, callBack) {\n    if (isElement(selector)) {\n      callBack(selector)\n    } else {\n      SelectorEngine.find(selector, this._element).forEach(callBack)\n    }\n  }\n\n  isOverflowing() {\n    return this.getWidth() > 0\n  }\n}\n\nexport default ScrollBarHelper\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler'\nimport { execute, executeAfterTransition, getElement, reflow, typeCheckConfig } from './index'\n\nconst Default = {\n  isVisible: true, // if false, we use the backdrop helper without adding any element to the dom\n  isAnimated: false,\n  rootElement: 'body', // give the choice to place backdrop under different elements\n  clickCallback: null\n}\n\nconst DefaultType = {\n  isVisible: 'boolean',\n  isAnimated: 'boolean',\n  rootElement: '(element|string)',\n  clickCallback: '(function|null)'\n}\nconst NAME = 'backdrop'\nconst CLASS_NAME_BACKDROP = 'modal-backdrop'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`\n\nclass Backdrop {\n  constructor(config) {\n    this._config = this._getConfig(config)\n    this._isAppended = false\n    this._element = null\n  }\n\n  show(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._append()\n\n    if (this._config.isAnimated) {\n      reflow(this._getElement())\n    }\n\n    this._getElement().classList.add(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      execute(callback)\n    })\n  }\n\n  hide(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._getElement().classList.remove(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      this.dispose()\n      execute(callback)\n    })\n  }\n\n  // Private\n\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div')\n      backdrop.className = CLASS_NAME_BACKDROP\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE)\n      }\n\n      this._element = backdrop\n    }\n\n    return this._element\n  }\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...(typeof config === 'object' ? config : {})\n    }\n\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = getElement(config.rootElement)\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _append() {\n    if (this._isAppended) {\n      return\n    }\n\n    this._config.rootElement.appendChild(this._getElement())\n\n    EventHandler.on(this._getElement(), EVENT_MOUSEDOWN, () => {\n      execute(this._config.clickCallback)\n    })\n\n    this._isAppended = true\n  }\n\n  dispose() {\n    if (!this._isAppended) {\n      return\n    }\n\n    EventHandler.off(this._element, EVENT_MOUSEDOWN)\n\n    this._element.remove()\n    this._isAppended = false\n  }\n\n  _emulateAnimation(callback) {\n    executeAfterTransition(callback, this._getElement(), this._config.isAnimated)\n  }\n}\n\nexport default Backdrop\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isRTL,\n  isVisible,\n  reflow,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport ScrollBarHelper from './util/scrollbar'\nimport BaseComponent from './base-component'\nimport Backdrop from './util/backdrop'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'modal'\nconst DATA_KEY = 'bs.modal'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst ESCAPE_KEY = 'Escape'\n\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  focus: true\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  focus: 'boolean'\n}\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_OPEN = 'modal-open'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_STATIC = 'modal-static'\n\nconst SELECTOR_DIALOG = '.modal-dialog'\nconst SELECTOR_MODAL_BODY = '.modal-body'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]'\nconst SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"modal\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._config = this._getConfig(config)\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element)\n    this._backdrop = this._initializeBackDrop()\n    this._isShown = false\n    this._ignoreBackdropClick = false\n    this._isTransitioning = false\n    this._scrollBar = new ScrollBarHelper()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, {\n      relatedTarget\n    })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n\n    if (this._isAnimated()) {\n      this._isTransitioning = true\n    }\n\n    this._scrollBar.hide()\n\n    document.body.classList.add(CLASS_NAME_OPEN)\n\n    this._adjustDialog()\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, event => this.hide(event))\n\n    EventHandler.on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {\n      EventHandler.one(this._element, EVENT_MOUSEUP_DISMISS, event => {\n        if (event.target === this._element) {\n          this._ignoreBackdropClick = true\n        }\n      })\n    })\n\n    this._showBackdrop(() => this._showElement(relatedTarget))\n  }\n\n  hide(event) {\n    if (event && ['A', 'AREA'].includes(event.target.tagName)) {\n      event.preventDefault()\n    }\n\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = false\n    const isAnimated = this._isAnimated()\n\n    if (isAnimated) {\n      this._isTransitioning = true\n    }\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    EventHandler.off(document, EVENT_FOCUSIN)\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    EventHandler.off(this._element, EVENT_CLICK_DISMISS)\n    EventHandler.off(this._dialog, EVENT_MOUSEDOWN_DISMISS)\n\n    this._queueCallback(() => this._hideModal(), this._element, isAnimated)\n  }\n\n  dispose() {\n    [window, this._dialog]\n      .forEach(htmlElement => EventHandler.off(htmlElement, EVENT_KEY))\n\n    this._backdrop.dispose()\n    super.dispose()\n\n    /**\n     * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`\n     * Do not move `document` in `htmlElements` array\n     * It will remove `EVENT_CLICK_DATA_API` event that should remain\n     */\n    EventHandler.off(document, EVENT_FOCUSIN)\n  }\n\n  handleUpdate() {\n    this._adjustDialog()\n  }\n\n  // Private\n\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop), // 'static' option will be translated to true, and booleans will keep their value\n      isAnimated: this._isAnimated()\n    })\n  }\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _showElement(relatedTarget) {\n    const isAnimated = this._isAnimated()\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog)\n\n    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n      // Don't move modal's DOM position\n      document.body.appendChild(this._element)\n    }\n\n    this._element.style.display = 'block'\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.scrollTop = 0\n\n    if (modalBody) {\n      modalBody.scrollTop = 0\n    }\n\n    if (isAnimated) {\n      reflow(this._element)\n    }\n\n    this._element.classList.add(CLASS_NAME_SHOW)\n\n    if (this._config.focus) {\n      this._enforceFocus()\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.focus()\n      }\n\n      this._isTransitioning = false\n      EventHandler.trigger(this._element, EVENT_SHOWN, {\n        relatedTarget\n      })\n    }\n\n    this._queueCallback(transitionComplete, this._dialog, isAnimated)\n  }\n\n  _enforceFocus() {\n    EventHandler.off(document, EVENT_FOCUSIN) // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => {\n      if (document !== event.target &&\n          this._element !== event.target &&\n          !this._element.contains(event.target)) {\n        this._element.focus()\n      }\n    })\n  }\n\n  _setEscapeEvent() {\n    if (this._isShown) {\n      EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n        if (this._config.keyboard && event.key === ESCAPE_KEY) {\n          event.preventDefault()\n          this.hide()\n        } else if (!this._config.keyboard && event.key === ESCAPE_KEY) {\n          this._triggerBackdropTransition()\n        }\n      })\n    } else {\n      EventHandler.off(this._element, EVENT_KEYDOWN_DISMISS)\n    }\n  }\n\n  _setResizeEvent() {\n    if (this._isShown) {\n      EventHandler.on(window, EVENT_RESIZE, () => this._adjustDialog())\n    } else {\n      EventHandler.off(window, EVENT_RESIZE)\n    }\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none'\n    this._element.setAttribute('aria-hidden', true)\n    this._element.removeAttribute('aria-modal')\n    this._element.removeAttribute('role')\n    this._isTransitioning = false\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN)\n      this._resetAdjustments()\n      this._scrollBar.reset()\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    })\n  }\n\n  _showBackdrop(callback) {\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, event => {\n      if (this._ignoreBackdropClick) {\n        this._ignoreBackdropClick = false\n        return\n      }\n\n      if (event.target !== event.currentTarget) {\n        return\n      }\n\n      if (this._config.backdrop === true) {\n        this.hide()\n      } else if (this._config.backdrop === 'static') {\n        this._triggerBackdropTransition()\n      }\n    })\n\n    this._backdrop.show(callback)\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE)\n  }\n\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const { classList, scrollHeight, style } = this._element\n    const isModalOverflowing = scrollHeight > document.documentElement.clientHeight\n\n    // return if the following background transition hasn't yet completed\n    if ((!isModalOverflowing && style.overflowY === 'hidden') || classList.contains(CLASS_NAME_STATIC)) {\n      return\n    }\n\n    if (!isModalOverflowing) {\n      style.overflowY = 'hidden'\n    }\n\n    classList.add(CLASS_NAME_STATIC)\n    this._queueCallback(() => {\n      classList.remove(CLASS_NAME_STATIC)\n      if (!isModalOverflowing) {\n        this._queueCallback(() => {\n          style.overflowY = ''\n        }, this._dialog)\n      }\n    }, this._dialog)\n\n    this._element.focus()\n  }\n\n  // ----------------------------------------------------------------------\n  // the following methods are used to handle overflowing modals\n  // ----------------------------------------------------------------------\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const scrollbarWidth = this._scrollBar.getWidth()\n    const isBodyOverflowing = scrollbarWidth > 0\n\n    if ((!isBodyOverflowing && isModalOverflowing && !isRTL()) || (isBodyOverflowing && !isModalOverflowing && isRTL())) {\n      this._element.style.paddingLeft = `${scrollbarWidth}px`\n    }\n\n    if ((isBodyOverflowing && !isModalOverflowing && !isRTL()) || (!isBodyOverflowing && isModalOverflowing && isRTL())) {\n      this._element.style.paddingRight = `${scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  // Static\n\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](relatedTarget)\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  EventHandler.one(target, EVENT_SHOW, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return\n    }\n\n    EventHandler.one(target, EVENT_HIDDEN, () => {\n      if (isVisible(this)) {\n        this.focus()\n      }\n    })\n  })\n\n  const data = Modal.getOrCreateInstance(target)\n\n  data.toggle(this)\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Modal to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Modal)\n\nexport default Modal\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): offcanvas.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isDisabled,\n  isVisible,\n  typeCheckConfig\n} from './util/index'\nimport ScrollBarHelper from './util/scrollbar'\nimport EventHandler from './dom/event-handler'\nimport BaseComponent from './base-component'\nimport SelectorEngine from './dom/selector-engine'\nimport Manipulator from './dom/manipulator'\nimport Backdrop from './util/backdrop'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'offcanvas'\nconst DATA_KEY = 'bs.offcanvas'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst ESCAPE_KEY = 'Escape'\n\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  scroll: false\n}\n\nconst DefaultType = {\n  backdrop: 'boolean',\n  keyboard: 'boolean',\n  scroll: 'boolean'\n}\n\nconst CLASS_NAME_SHOW = 'show'\nconst OPEN_SELECTOR = '.offcanvas.show'\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\n\nconst SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"offcanvas\"]'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"offcanvas\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Offcanvas extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._config = this._getConfig(config)\n    this._isShown = false\n    this._backdrop = this._initializeBackDrop()\n    this._addEventListeners()\n  }\n\n  // Getters\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, { relatedTarget })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n    this._element.style.visibility = 'visible'\n\n    this._backdrop.show()\n\n    if (!this._config.scroll) {\n      new ScrollBarHelper().hide()\n      this._enforceFocusOnElement(this._element)\n    }\n\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.classList.add(CLASS_NAME_SHOW)\n\n    const completeCallBack = () => {\n      EventHandler.trigger(this._element, EVENT_SHOWN, { relatedTarget })\n    }\n\n    this._queueCallback(completeCallBack, this._element, true)\n  }\n\n  hide() {\n    if (!this._isShown) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    EventHandler.off(document, EVENT_FOCUSIN)\n    this._element.blur()\n    this._isShown = false\n    this._element.classList.remove(CLASS_NAME_SHOW)\n    this._backdrop.hide()\n\n    const completeCallback = () => {\n      this._element.setAttribute('aria-hidden', true)\n      this._element.removeAttribute('aria-modal')\n      this._element.removeAttribute('role')\n      this._element.style.visibility = 'hidden'\n\n      if (!this._config.scroll) {\n        new ScrollBarHelper().reset()\n      }\n\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._queueCallback(completeCallback, this._element, true)\n  }\n\n  dispose() {\n    this._backdrop.dispose()\n    super.dispose()\n    EventHandler.off(document, EVENT_FOCUSIN)\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: this._config.backdrop,\n      isAnimated: true,\n      rootElement: this._element.parentNode,\n      clickCallback: () => this.hide()\n    })\n  }\n\n  _enforceFocusOnElement(element) {\n    EventHandler.off(document, EVENT_FOCUSIN) // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => {\n      if (document !== event.target &&\n        element !== event.target &&\n        !element.contains(event.target)) {\n        element.focus()\n      }\n    })\n    element.focus()\n  }\n\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, () => this.hide())\n\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n      if (this._config.keyboard && event.key === ESCAPE_KEY) {\n        this.hide()\n      }\n    })\n  }\n\n  // Static\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Offcanvas.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](this)\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  if (isDisabled(this)) {\n    return\n  }\n\n  EventHandler.one(target, EVENT_HIDDEN, () => {\n    // focus on trigger when it is closed\n    if (isVisible(this)) {\n      this.focus()\n    }\n  })\n\n  // avoid conflict when clicking a toggler of an offcanvas, while another is open\n  const allReadyOpen = SelectorEngine.findOne(OPEN_SELECTOR)\n  if (allReadyOpen && allReadyOpen !== target) {\n    Offcanvas.getInstance(allReadyOpen).hide()\n  }\n\n  const data = Offcanvas.getOrCreateInstance(target)\n  data.toggle(this)\n})\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () =>\n  SelectorEngine.find(OPEN_SELECTOR).forEach(el => Offcanvas.getOrCreateInstance(el).show())\n)\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\ndefineJQueryPlugin(Offcanvas)\n\nexport default Offcanvas\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): util/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst uriAttrs = new Set([\n  'background',\n  'cite',\n  'href',\n  'itemtype',\n  'longdesc',\n  'poster',\n  'src',\n  'xlink:href'\n])\n\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/i\n\n/**\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[\\d+/a-z]+=*$/i\n\nconst allowedAttribute = (attr, allowedAttributeList) => {\n  const attrName = attr.nodeName.toLowerCase()\n\n  if (allowedAttributeList.includes(attrName)) {\n    if (uriAttrs.has(attrName)) {\n      return Boolean(SAFE_URL_PATTERN.test(attr.nodeValue) || DATA_URL_PATTERN.test(attr.nodeValue))\n    }\n\n    return true\n  }\n\n  const regExp = allowedAttributeList.filter(attrRegex => attrRegex instanceof RegExp)\n\n  // Check if a regular expression validates the attribute.\n  for (let i = 0, len = regExp.length; i < len; i++) {\n    if (regExp[i].test(attrName)) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport const DefaultAllowlist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  div: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n}\n\nexport function sanitizeHtml(unsafeHtml, allowList, sanitizeFn) {\n  if (!unsafeHtml.length) {\n    return unsafeHtml\n  }\n\n  if (sanitizeFn && typeof sanitizeFn === 'function') {\n    return sanitizeFn(unsafeHtml)\n  }\n\n  const domParser = new window.DOMParser()\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html')\n  const allowlistKeys = Object.keys(allowList)\n  const elements = [].concat(...createdDocument.body.querySelectorAll('*'))\n\n  for (let i = 0, len = elements.length; i < len; i++) {\n    const el = elements[i]\n    const elName = el.nodeName.toLowerCase()\n\n    if (!allowlistKeys.includes(elName)) {\n      el.remove()\n\n      continue\n    }\n\n    const attributeList = [].concat(...el.attributes)\n    const allowedAttributes = [].concat(allowList['*'] || [], allowList[elName] || [])\n\n    attributeList.forEach(attr => {\n      if (!allowedAttribute(attr, allowedAttributes)) {\n        el.removeAttribute(attr.nodeName)\n      }\n    })\n  }\n\n  return createdDocument.body.innerHTML\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from '@popperjs/core'\n\nimport {\n  defineJQueryPlugin,\n  findShadowRoot,\n  getElement,\n  getUID,\n  isElement,\n  isRTL,\n  noop,\n  typeCheckConfig\n} from './util/index'\nimport {\n  DefaultAllowlist,\n  sanitizeHtml\n} from './util/sanitizer'\nimport Data from './dom/data'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'tooltip'\nconst DATA_KEY = 'bs.tooltip'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst CLASS_PREFIX = 'bs-tooltip'\nconst BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\nconst DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn'])\n\nconst DefaultType = {\n  animation: 'boolean',\n  template: 'string',\n  title: '(string|element|function)',\n  trigger: 'string',\n  delay: '(number|object)',\n  html: 'boolean',\n  selector: '(string|boolean)',\n  placement: '(string|function)',\n  offset: '(array|string|function)',\n  container: '(string|element|boolean)',\n  fallbackPlacements: 'array',\n  boundary: '(string|element)',\n  customClass: '(string|function)',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  allowList: 'object',\n  popperConfig: '(null|object|function)'\n}\n\nconst AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: isRTL() ? 'left' : 'right',\n  BOTTOM: 'bottom',\n  LEFT: isRTL() ? 'right' : 'left'\n}\n\nconst Default = {\n  animation: true,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' +\n              '<div class=\"tooltip-arrow\"></div>' +\n              '<div class=\"tooltip-inner\"></div>' +\n            '</div>',\n  trigger: 'hover focus',\n  title: '',\n  delay: 0,\n  html: false,\n  selector: false,\n  placement: 'top',\n  offset: [0, 0],\n  container: false,\n  fallbackPlacements: ['top', 'right', 'bottom', 'left'],\n  boundary: 'clippingParents',\n  customClass: '',\n  sanitize: true,\n  sanitizeFn: null,\n  allowList: DefaultAllowlist,\n  popperConfig: null\n}\n\nconst Event = {\n  HIDE: `hide${EVENT_KEY}`,\n  HIDDEN: `hidden${EVENT_KEY}`,\n  SHOW: `show${EVENT_KEY}`,\n  SHOWN: `shown${EVENT_KEY}`,\n  INSERTED: `inserted${EVENT_KEY}`,\n  CLICK: `click${EVENT_KEY}`,\n  FOCUSIN: `focusin${EVENT_KEY}`,\n  FOCUSOUT: `focusout${EVENT_KEY}`,\n  MOUSEENTER: `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE: `mouseleave${EVENT_KEY}`\n}\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_MODAL = 'modal'\nconst CLASS_NAME_SHOW = 'show'\n\nconst HOVER_STATE_SHOW = 'show'\nconst HOVER_STATE_OUT = 'out'\n\nconst SELECTOR_TOOLTIP_INNER = '.tooltip-inner'\n\nconst TRIGGER_HOVER = 'hover'\nconst TRIGGER_FOCUS = 'focus'\nconst TRIGGER_CLICK = 'click'\nconst TRIGGER_MANUAL = 'manual'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Tooltip extends BaseComponent {\n  constructor(element, config) {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org)')\n    }\n\n    super(element)\n\n    // private\n    this._isEnabled = true\n    this._timeout = 0\n    this._hoverState = ''\n    this._activeTrigger = {}\n    this._popper = null\n\n    // Protected\n    this._config = this._getConfig(config)\n    this.tip = null\n\n    this._setListeners()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Public\n\n  enable() {\n    this._isEnabled = true\n  }\n\n  disable() {\n    this._isEnabled = false\n  }\n\n  toggleEnabled() {\n    this._isEnabled = !this._isEnabled\n  }\n\n  toggle(event) {\n    if (!this._isEnabled) {\n      return\n    }\n\n    if (event) {\n      const context = this._initializeOnDelegatedTarget(event)\n\n      context._activeTrigger.click = !context._activeTrigger.click\n\n      if (context._isWithActiveTrigger()) {\n        context._enter(null, context)\n      } else {\n        context._leave(null, context)\n      }\n    } else {\n      if (this.getTipElement().classList.contains(CLASS_NAME_SHOW)) {\n        this._leave(null, this)\n        return\n      }\n\n      this._enter(null, this)\n    }\n  }\n\n  dispose() {\n    clearTimeout(this._timeout)\n\n    EventHandler.off(this._element.closest(`.${CLASS_NAME_MODAL}`), 'hide.bs.modal', this._hideModalHandler)\n\n    if (this.tip) {\n      this.tip.remove()\n    }\n\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    super.dispose()\n  }\n\n  show() {\n    if (this._element.style.display === 'none') {\n      throw new Error('Please use show on visible elements')\n    }\n\n    if (!(this.isWithContent() && this._isEnabled)) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, this.constructor.Event.SHOW)\n    const shadowRoot = findShadowRoot(this._element)\n    const isInTheDom = shadowRoot === null ?\n      this._element.ownerDocument.documentElement.contains(this._element) :\n      shadowRoot.contains(this._element)\n\n    if (showEvent.defaultPrevented || !isInTheDom) {\n      return\n    }\n\n    const tip = this.getTipElement()\n    const tipId = getUID(this.constructor.NAME)\n\n    tip.setAttribute('id', tipId)\n    this._element.setAttribute('aria-describedby', tipId)\n\n    this.setContent()\n\n    if (this._config.animation) {\n      tip.classList.add(CLASS_NAME_FADE)\n    }\n\n    const placement = typeof this._config.placement === 'function' ?\n      this._config.placement.call(this, tip, this._element) :\n      this._config.placement\n\n    const attachment = this._getAttachment(placement)\n    this._addAttachmentClass(attachment)\n\n    const { container } = this._config\n    Data.set(tip, this.constructor.DATA_KEY, this)\n\n    if (!this._element.ownerDocument.documentElement.contains(this.tip)) {\n      container.appendChild(tip)\n      EventHandler.trigger(this._element, this.constructor.Event.INSERTED)\n    }\n\n    if (this._popper) {\n      this._popper.update()\n    } else {\n      this._popper = Popper.createPopper(this._element, tip, this._getPopperConfig(attachment))\n    }\n\n    tip.classList.add(CLASS_NAME_SHOW)\n\n    const customClass = typeof this._config.customClass === 'function' ? this._config.customClass() : this._config.customClass\n    if (customClass) {\n      tip.classList.add(...customClass.split(' '))\n    }\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement) {\n      [].concat(...document.body.children).forEach(element => {\n        EventHandler.on(element, 'mouseover', noop)\n      })\n    }\n\n    const complete = () => {\n      const prevHoverState = this._hoverState\n\n      this._hoverState = null\n      EventHandler.trigger(this._element, this.constructor.Event.SHOWN)\n\n      if (prevHoverState === HOVER_STATE_OUT) {\n        this._leave(null, this)\n      }\n    }\n\n    const isAnimated = this.tip.classList.contains(CLASS_NAME_FADE)\n    this._queueCallback(complete, this.tip, isAnimated)\n  }\n\n  hide() {\n    if (!this._popper) {\n      return\n    }\n\n    const tip = this.getTipElement()\n    const complete = () => {\n      if (this._isWithActiveTrigger()) {\n        return\n      }\n\n      if (this._hoverState !== HOVER_STATE_SHOW) {\n        tip.remove()\n      }\n\n      this._cleanTipClass()\n      this._element.removeAttribute('aria-describedby')\n      EventHandler.trigger(this._element, this.constructor.Event.HIDDEN)\n\n      if (this._popper) {\n        this._popper.destroy()\n        this._popper = null\n      }\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, this.constructor.Event.HIDE)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    tip.classList.remove(CLASS_NAME_SHOW)\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      [].concat(...document.body.children)\n        .forEach(element => EventHandler.off(element, 'mouseover', noop))\n    }\n\n    this._activeTrigger[TRIGGER_CLICK] = false\n    this._activeTrigger[TRIGGER_FOCUS] = false\n    this._activeTrigger[TRIGGER_HOVER] = false\n\n    const isAnimated = this.tip.classList.contains(CLASS_NAME_FADE)\n    this._queueCallback(complete, this.tip, isAnimated)\n    this._hoverState = ''\n  }\n\n  update() {\n    if (this._popper !== null) {\n      this._popper.update()\n    }\n  }\n\n  // Protected\n\n  isWithContent() {\n    return Boolean(this.getTitle())\n  }\n\n  getTipElement() {\n    if (this.tip) {\n      return this.tip\n    }\n\n    const element = document.createElement('div')\n    element.innerHTML = this._config.template\n\n    this.tip = element.children[0]\n    return this.tip\n  }\n\n  setContent() {\n    const tip = this.getTipElement()\n    this.setElementContent(SelectorEngine.findOne(SELECTOR_TOOLTIP_INNER, tip), this.getTitle())\n    tip.classList.remove(CLASS_NAME_FADE, CLASS_NAME_SHOW)\n  }\n\n  setElementContent(element, content) {\n    if (element === null) {\n      return\n    }\n\n    if (isElement(content)) {\n      content = getElement(content)\n\n      // content is a DOM node or a jQuery\n      if (this._config.html) {\n        if (content.parentNode !== element) {\n          element.innerHTML = ''\n          element.appendChild(content)\n        }\n      } else {\n        element.textContent = content.textContent\n      }\n\n      return\n    }\n\n    if (this._config.html) {\n      if (this._config.sanitize) {\n        content = sanitizeHtml(content, this._config.allowList, this._config.sanitizeFn)\n      }\n\n      element.innerHTML = content\n    } else {\n      element.textContent = content\n    }\n  }\n\n  getTitle() {\n    let title = this._element.getAttribute('data-bs-original-title')\n\n    if (!title) {\n      title = typeof this._config.title === 'function' ?\n        this._config.title.call(this._element) :\n        this._config.title\n    }\n\n    return title\n  }\n\n  updateAttachment(attachment) {\n    if (attachment === 'right') {\n      return 'end'\n    }\n\n    if (attachment === 'left') {\n      return 'start'\n    }\n\n    return attachment\n  }\n\n  // Private\n\n  _initializeOnDelegatedTarget(event, context) {\n    const dataKey = this.constructor.DATA_KEY\n    context = context || Data.get(event.delegateTarget, dataKey)\n\n    if (!context) {\n      context = new this.constructor(event.delegateTarget, this._getDelegateConfig())\n      Data.set(event.delegateTarget, dataKey, context)\n    }\n\n    return context\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(val => Number.parseInt(val, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _getPopperConfig(attachment) {\n    const defaultBsPopperConfig = {\n      placement: attachment,\n      modifiers: [\n        {\n          name: 'flip',\n          options: {\n            fallbackPlacements: this._config.fallbackPlacements\n          }\n        },\n        {\n          name: 'offset',\n          options: {\n            offset: this._getOffset()\n          }\n        },\n        {\n          name: 'preventOverflow',\n          options: {\n            boundary: this._config.boundary\n          }\n        },\n        {\n          name: 'arrow',\n          options: {\n            element: `.${this.constructor.NAME}-arrow`\n          }\n        },\n        {\n          name: 'onChange',\n          enabled: true,\n          phase: 'afterWrite',\n          fn: data => this._handlePopperPlacementChange(data)\n        }\n      ],\n      onFirstUpdate: data => {\n        if (data.options.placement !== data.placement) {\n          this._handlePopperPlacementChange(data)\n        }\n      }\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...(typeof this._config.popperConfig === 'function' ? this._config.popperConfig(defaultBsPopperConfig) : this._config.popperConfig)\n    }\n  }\n\n  _addAttachmentClass(attachment) {\n    this.getTipElement().classList.add(`${CLASS_PREFIX}-${this.updateAttachment(attachment)}`)\n  }\n\n  _getAttachment(placement) {\n    return AttachmentMap[placement.toUpperCase()]\n  }\n\n  _setListeners() {\n    const triggers = this._config.trigger.split(' ')\n\n    triggers.forEach(trigger => {\n      if (trigger === 'click') {\n        EventHandler.on(this._element, this.constructor.Event.CLICK, this._config.selector, event => this.toggle(event))\n      } else if (trigger !== TRIGGER_MANUAL) {\n        const eventIn = trigger === TRIGGER_HOVER ?\n          this.constructor.Event.MOUSEENTER :\n          this.constructor.Event.FOCUSIN\n        const eventOut = trigger === TRIGGER_HOVER ?\n          this.constructor.Event.MOUSELEAVE :\n          this.constructor.Event.FOCUSOUT\n\n        EventHandler.on(this._element, eventIn, this._config.selector, event => this._enter(event))\n        EventHandler.on(this._element, eventOut, this._config.selector, event => this._leave(event))\n      }\n    })\n\n    this._hideModalHandler = () => {\n      if (this._element) {\n        this.hide()\n      }\n    }\n\n    EventHandler.on(this._element.closest(`.${CLASS_NAME_MODAL}`), 'hide.bs.modal', this._hideModalHandler)\n\n    if (this._config.selector) {\n      this._config = {\n        ...this._config,\n        trigger: 'manual',\n        selector: ''\n      }\n    } else {\n      this._fixTitle()\n    }\n  }\n\n  _fixTitle() {\n    const title = this._element.getAttribute('title')\n    const originalTitleType = typeof this._element.getAttribute('data-bs-original-title')\n\n    if (title || originalTitleType !== 'string') {\n      this._element.setAttribute('data-bs-original-title', title || '')\n      if (title && !this._element.getAttribute('aria-label') && !this._element.textContent) {\n        this._element.setAttribute('aria-label', title)\n      }\n\n      this._element.setAttribute('title', '')\n    }\n  }\n\n  _enter(event, context) {\n    context = this._initializeOnDelegatedTarget(event, context)\n\n    if (event) {\n      context._activeTrigger[\n        event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER\n      ] = true\n    }\n\n    if (context.getTipElement().classList.contains(CLASS_NAME_SHOW) || context._hoverState === HOVER_STATE_SHOW) {\n      context._hoverState = HOVER_STATE_SHOW\n      return\n    }\n\n    clearTimeout(context._timeout)\n\n    context._hoverState = HOVER_STATE_SHOW\n\n    if (!context._config.delay || !context._config.delay.show) {\n      context.show()\n      return\n    }\n\n    context._timeout = setTimeout(() => {\n      if (context._hoverState === HOVER_STATE_SHOW) {\n        context.show()\n      }\n    }, context._config.delay.show)\n  }\n\n  _leave(event, context) {\n    context = this._initializeOnDelegatedTarget(event, context)\n\n    if (event) {\n      context._activeTrigger[\n        event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER\n      ] = context._element.contains(event.relatedTarget)\n    }\n\n    if (context._isWithActiveTrigger()) {\n      return\n    }\n\n    clearTimeout(context._timeout)\n\n    context._hoverState = HOVER_STATE_OUT\n\n    if (!context._config.delay || !context._config.delay.hide) {\n      context.hide()\n      return\n    }\n\n    context._timeout = setTimeout(() => {\n      if (context._hoverState === HOVER_STATE_OUT) {\n        context.hide()\n      }\n    }, context._config.delay.hide)\n  }\n\n  _isWithActiveTrigger() {\n    for (const trigger in this._activeTrigger) {\n      if (this._activeTrigger[trigger]) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  _getConfig(config) {\n    const dataAttributes = Manipulator.getDataAttributes(this._element)\n\n    Object.keys(dataAttributes).forEach(dataAttr => {\n      if (DISALLOWED_ATTRIBUTES.has(dataAttr)) {\n        delete dataAttributes[dataAttr]\n      }\n    })\n\n    config = {\n      ...this.constructor.Default,\n      ...dataAttributes,\n      ...(typeof config === 'object' && config ? config : {})\n    }\n\n    config.container = config.container === false ? document.body : getElement(config.container)\n\n    if (typeof config.delay === 'number') {\n      config.delay = {\n        show: config.delay,\n        hide: config.delay\n      }\n    }\n\n    if (typeof config.title === 'number') {\n      config.title = config.title.toString()\n    }\n\n    if (typeof config.content === 'number') {\n      config.content = config.content.toString()\n    }\n\n    typeCheckConfig(NAME, config, this.constructor.DefaultType)\n\n    if (config.sanitize) {\n      config.template = sanitizeHtml(config.template, config.allowList, config.sanitizeFn)\n    }\n\n    return config\n  }\n\n  _getDelegateConfig() {\n    const config = {}\n\n    if (this._config) {\n      for (const key in this._config) {\n        if (this.constructor.Default[key] !== this._config[key]) {\n          config[key] = this._config[key]\n        }\n      }\n    }\n\n    return config\n  }\n\n  _cleanTipClass() {\n    const tip = this.getTipElement()\n    const tabClass = tip.getAttribute('class').match(BSCLS_PREFIX_REGEX)\n    if (tabClass !== null && tabClass.length > 0) {\n      tabClass.map(token => token.trim())\n        .forEach(tClass => tip.classList.remove(tClass))\n    }\n  }\n\n  _handlePopperPlacementChange(popperData) {\n    const { state } = popperData\n\n    if (!state) {\n      return\n    }\n\n    this.tip = state.elements.popper\n    this._cleanTipClass()\n    this._addAttachmentClass(this._getAttachment(state.placement))\n  }\n\n  // Static\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tooltip.getOrCreateInstance(this, config)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Tooltip to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Tooltip)\n\nexport default Tooltip\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { defineJQueryPlugin } from './util/index'\nimport SelectorEngine from './dom/selector-engine'\nimport Tooltip from './tooltip'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'popover'\nconst DATA_KEY = 'bs.popover'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst CLASS_PREFIX = 'bs-popover'\nconst BSCLS_PREFIX_REGEX = new RegExp(`(^|\\\\s)${CLASS_PREFIX}\\\\S+`, 'g')\n\nconst Default = {\n  ...Tooltip.Default,\n  placement: 'right',\n  offset: [0, 8],\n  trigger: 'click',\n  content: '',\n  template: '<div class=\"popover\" role=\"tooltip\">' +\n              '<div class=\"popover-arrow\"></div>' +\n              '<h3 class=\"popover-header\"></h3>' +\n              '<div class=\"popover-body\"></div>' +\n            '</div>'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content: '(string|element|function)'\n}\n\nconst Event = {\n  HIDE: `hide${EVENT_KEY}`,\n  HIDDEN: `hidden${EVENT_KEY}`,\n  SHOW: `show${EVENT_KEY}`,\n  SHOWN: `shown${EVENT_KEY}`,\n  INSERTED: `inserted${EVENT_KEY}`,\n  CLICK: `click${EVENT_KEY}`,\n  FOCUSIN: `focusin${EVENT_KEY}`,\n  FOCUSOUT: `focusout${EVENT_KEY}`,\n  MOUSEENTER: `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE: `mouseleave${EVENT_KEY}`\n}\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\nconst SELECTOR_TITLE = '.popover-header'\nconst SELECTOR_CONTENT = '.popover-body'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Popover extends Tooltip {\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Overrides\n\n  isWithContent() {\n    return this.getTitle() || this._getContent()\n  }\n\n  getTipElement() {\n    if (this.tip) {\n      return this.tip\n    }\n\n    this.tip = super.getTipElement()\n\n    if (!this.getTitle()) {\n      SelectorEngine.findOne(SELECTOR_TITLE, this.tip).remove()\n    }\n\n    if (!this._getContent()) {\n      SelectorEngine.findOne(SELECTOR_CONTENT, this.tip).remove()\n    }\n\n    return this.tip\n  }\n\n  setContent() {\n    const tip = this.getTipElement()\n\n    // we use append for html objects to maintain js events\n    this.setElementContent(SelectorEngine.findOne(SELECTOR_TITLE, tip), this.getTitle())\n    let content = this._getContent()\n    if (typeof content === 'function') {\n      content = content.call(this._element)\n    }\n\n    this.setElementContent(SelectorEngine.findOne(SELECTOR_CONTENT, tip), content)\n\n    tip.classList.remove(CLASS_NAME_FADE, CLASS_NAME_SHOW)\n  }\n\n  // Private\n\n  _addAttachmentClass(attachment) {\n    this.getTipElement().classList.add(`${CLASS_PREFIX}-${this.updateAttachment(attachment)}`)\n  }\n\n  _getContent() {\n    return this._element.getAttribute('data-bs-content') || this._config.content\n  }\n\n  _cleanTipClass() {\n    const tip = this.getTipElement()\n    const tabClass = tip.getAttribute('class').match(BSCLS_PREFIX_REGEX)\n    if (tabClass !== null && tabClass.length > 0) {\n      tabClass.map(token => token.trim())\n        .forEach(tClass => tip.classList.remove(tClass))\n    }\n  }\n\n  // Static\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Popover.getOrCreateInstance(this, config)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Popover to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Popover)\n\nexport default Popover\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getSelectorFromElement,\n  getUID,\n  isElement,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'scrollspy'\nconst DATA_KEY = 'bs.scrollspy'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst Default = {\n  offset: 10,\n  method: 'auto',\n  target: ''\n}\n\nconst DefaultType = {\n  offset: 'number',\n  method: 'string',\n  target: '(string|element)'\n}\n\nconst EVENT_ACTIVATE = `activate${EVENT_KEY}`\nconst EVENT_SCROLL = `scroll${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item'\nconst CLASS_NAME_ACTIVE = 'active'\n\nconst SELECTOR_DATA_SPY = '[data-bs-spy=\"scroll\"]'\nconst SELECTOR_NAV_LIST_GROUP = '.nav, .list-group'\nconst SELECTOR_NAV_LINKS = '.nav-link'\nconst SELECTOR_NAV_ITEMS = '.nav-item'\nconst SELECTOR_LIST_ITEMS = '.list-group-item'\nconst SELECTOR_DROPDOWN = '.dropdown'\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle'\n\nconst METHOD_OFFSET = 'offset'\nconst METHOD_POSITION = 'position'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass ScrollSpy extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n    this._scrollElement = this._element.tagName === 'BODY' ? window : this._element\n    this._config = this._getConfig(config)\n    this._selector = `${this._config.target} ${SELECTOR_NAV_LINKS}, ${this._config.target} ${SELECTOR_LIST_ITEMS}, ${this._config.target} .${CLASS_NAME_DROPDOWN_ITEM}`\n    this._offsets = []\n    this._targets = []\n    this._activeTarget = null\n    this._scrollHeight = 0\n\n    EventHandler.on(this._scrollElement, EVENT_SCROLL, () => this._process())\n\n    this.refresh()\n    this._process()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  refresh() {\n    const autoMethod = this._scrollElement === this._scrollElement.window ?\n      METHOD_OFFSET :\n      METHOD_POSITION\n\n    const offsetMethod = this._config.method === 'auto' ?\n      autoMethod :\n      this._config.method\n\n    const offsetBase = offsetMethod === METHOD_POSITION ?\n      this._getScrollTop() :\n      0\n\n    this._offsets = []\n    this._targets = []\n    this._scrollHeight = this._getScrollHeight()\n\n    const targets = SelectorEngine.find(this._selector)\n\n    targets.map(element => {\n      const targetSelector = getSelectorFromElement(element)\n      const target = targetSelector ? SelectorEngine.findOne(targetSelector) : null\n\n      if (target) {\n        const targetBCR = target.getBoundingClientRect()\n        if (targetBCR.width || targetBCR.height) {\n          return [\n            Manipulator[offsetMethod](target).top + offsetBase,\n            targetSelector\n          ]\n        }\n      }\n\n      return null\n    })\n      .filter(item => item)\n      .sort((a, b) => a[0] - b[0])\n      .forEach(item => {\n        this._offsets.push(item[0])\n        this._targets.push(item[1])\n      })\n  }\n\n  dispose() {\n    EventHandler.off(this._scrollElement, EVENT_KEY)\n    super.dispose()\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' && config ? config : {})\n    }\n\n    if (typeof config.target !== 'string' && isElement(config.target)) {\n      let { id } = config.target\n      if (!id) {\n        id = getUID(NAME)\n        config.target.id = id\n      }\n\n      config.target = `#${id}`\n    }\n\n    typeCheckConfig(NAME, config, DefaultType)\n\n    return config\n  }\n\n  _getScrollTop() {\n    return this._scrollElement === window ?\n      this._scrollElement.pageYOffset :\n      this._scrollElement.scrollTop\n  }\n\n  _getScrollHeight() {\n    return this._scrollElement.scrollHeight || Math.max(\n      document.body.scrollHeight,\n      document.documentElement.scrollHeight\n    )\n  }\n\n  _getOffsetHeight() {\n    return this._scrollElement === window ?\n      window.innerHeight :\n      this._scrollElement.getBoundingClientRect().height\n  }\n\n  _process() {\n    const scrollTop = this._getScrollTop() + this._config.offset\n    const scrollHeight = this._getScrollHeight()\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight()\n\n    if (this._scrollHeight !== scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      const target = this._targets[this._targets.length - 1]\n\n      if (this._activeTarget !== target) {\n        this._activate(target)\n      }\n\n      return\n    }\n\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n      this._activeTarget = null\n      this._clear()\n      return\n    }\n\n    for (let i = this._offsets.length; i--;) {\n      const isActiveTarget = this._activeTarget !== this._targets[i] &&\n          scrollTop >= this._offsets[i] &&\n          (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1])\n\n      if (isActiveTarget) {\n        this._activate(this._targets[i])\n      }\n    }\n  }\n\n  _activate(target) {\n    this._activeTarget = target\n\n    this._clear()\n\n    const queries = this._selector.split(',')\n      .map(selector => `${selector}[data-bs-target=\"${target}\"],${selector}[href=\"${target}\"]`)\n\n    const link = SelectorEngine.findOne(queries.join(','))\n\n    if (link.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {\n      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE, link.closest(SELECTOR_DROPDOWN))\n        .classList.add(CLASS_NAME_ACTIVE)\n\n      link.classList.add(CLASS_NAME_ACTIVE)\n    } else {\n      // Set triggered link as active\n      link.classList.add(CLASS_NAME_ACTIVE)\n\n      SelectorEngine.parents(link, SELECTOR_NAV_LIST_GROUP)\n        .forEach(listGroup => {\n          // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n          SelectorEngine.prev(listGroup, `${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`)\n            .forEach(item => item.classList.add(CLASS_NAME_ACTIVE))\n\n          // Handle special case when .nav-link is inside .nav-item\n          SelectorEngine.prev(listGroup, SELECTOR_NAV_ITEMS)\n            .forEach(navItem => {\n              SelectorEngine.children(navItem, SELECTOR_NAV_LINKS)\n                .forEach(item => item.classList.add(CLASS_NAME_ACTIVE))\n            })\n        })\n    }\n\n    EventHandler.trigger(this._scrollElement, EVENT_ACTIVATE, {\n      relatedTarget: target\n    })\n  }\n\n  _clear() {\n    SelectorEngine.find(this._selector)\n      .filter(node => node.classList.contains(CLASS_NAME_ACTIVE))\n      .forEach(node => node.classList.remove(CLASS_NAME_ACTIVE))\n  }\n\n  // Static\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = ScrollSpy.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  SelectorEngine.find(SELECTOR_DATA_SPY)\n    .forEach(spy => new ScrollSpy(spy))\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .ScrollSpy to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(ScrollSpy)\n\nexport default ScrollSpy\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): tab.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isDisabled,\n  reflow\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport SelectorEngine from './dom/selector-engine'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'tab'\nconst DATA_KEY = 'bs.tab'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_DROPDOWN_MENU = 'dropdown-menu'\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\nconst SELECTOR_DROPDOWN = '.dropdown'\nconst SELECTOR_NAV_LIST_GROUP = '.nav, .list-group'\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_ACTIVE_UL = ':scope > li > .active'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"tab\"], [data-bs-toggle=\"pill\"], [data-bs-toggle=\"list\"]'\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle'\nconst SELECTOR_DROPDOWN_ACTIVE_CHILD = ':scope > .dropdown-menu .active'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Tab extends BaseComponent {\n  // Getters\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  show() {\n    if ((this._element.parentNode &&\n      this._element.parentNode.nodeType === Node.ELEMENT_NODE &&\n      this._element.classList.contains(CLASS_NAME_ACTIVE))) {\n      return\n    }\n\n    let previous\n    const target = getElementFromSelector(this._element)\n    const listElement = this._element.closest(SELECTOR_NAV_LIST_GROUP)\n\n    if (listElement) {\n      const itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? SELECTOR_ACTIVE_UL : SELECTOR_ACTIVE\n      previous = SelectorEngine.find(itemSelector, listElement)\n      previous = previous[previous.length - 1]\n    }\n\n    const hideEvent = previous ?\n      EventHandler.trigger(previous, EVENT_HIDE, {\n        relatedTarget: this._element\n      }) :\n      null\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, {\n      relatedTarget: previous\n    })\n\n    if (showEvent.defaultPrevented || (hideEvent !== null && hideEvent.defaultPrevented)) {\n      return\n    }\n\n    this._activate(this._element, listElement)\n\n    const complete = () => {\n      EventHandler.trigger(previous, EVENT_HIDDEN, {\n        relatedTarget: this._element\n      })\n      EventHandler.trigger(this._element, EVENT_SHOWN, {\n        relatedTarget: previous\n      })\n    }\n\n    if (target) {\n      this._activate(target, target.parentNode, complete)\n    } else {\n      complete()\n    }\n  }\n\n  // Private\n\n  _activate(element, container, callback) {\n    const activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ?\n      SelectorEngine.find(SELECTOR_ACTIVE_UL, container) :\n      SelectorEngine.children(container, SELECTOR_ACTIVE)\n\n    const active = activeElements[0]\n    const isTransitioning = callback && (active && active.classList.contains(CLASS_NAME_FADE))\n\n    const complete = () => this._transitionComplete(element, active, callback)\n\n    if (active && isTransitioning) {\n      active.classList.remove(CLASS_NAME_SHOW)\n      this._queueCallback(complete, element, true)\n    } else {\n      complete()\n    }\n  }\n\n  _transitionComplete(element, active, callback) {\n    if (active) {\n      active.classList.remove(CLASS_NAME_ACTIVE)\n\n      const dropdownChild = SelectorEngine.findOne(SELECTOR_DROPDOWN_ACTIVE_CHILD, active.parentNode)\n\n      if (dropdownChild) {\n        dropdownChild.classList.remove(CLASS_NAME_ACTIVE)\n      }\n\n      if (active.getAttribute('role') === 'tab') {\n        active.setAttribute('aria-selected', false)\n      }\n    }\n\n    element.classList.add(CLASS_NAME_ACTIVE)\n    if (element.getAttribute('role') === 'tab') {\n      element.setAttribute('aria-selected', true)\n    }\n\n    reflow(element)\n\n    if (element.classList.contains(CLASS_NAME_FADE)) {\n      element.classList.add(CLASS_NAME_SHOW)\n    }\n\n    let parent = element.parentNode\n    if (parent && parent.nodeName === 'LI') {\n      parent = parent.parentNode\n    }\n\n    if (parent && parent.classList.contains(CLASS_NAME_DROPDOWN_MENU)) {\n      const dropdownElement = element.closest(SELECTOR_DROPDOWN)\n\n      if (dropdownElement) {\n        SelectorEngine.find(SELECTOR_DROPDOWN_TOGGLE, dropdownElement)\n          .forEach(dropdown => dropdown.classList.add(CLASS_NAME_ACTIVE))\n      }\n\n      element.setAttribute('aria-expanded', true)\n    }\n\n    if (callback) {\n      callback()\n    }\n  }\n\n  // Static\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tab.getOrCreateInstance(this)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  if (isDisabled(this)) {\n    return\n  }\n\n  const data = Tab.getOrCreateInstance(this)\n  data.show()\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Tab to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Tab)\n\nexport default Tab\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  reflow,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport BaseComponent from './base-component'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'toast'\nconst DATA_KEY = 'bs.toast'\nconst EVENT_KEY = `.${DATA_KEY}`\n\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEOVER = `mouseover${EVENT_KEY}`\nconst EVENT_MOUSEOUT = `mouseout${EVENT_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_FOCUSOUT = `focusout${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_HIDE = 'hide'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SHOWING = 'showing'\n\nconst DefaultType = {\n  animation: 'boolean',\n  autohide: 'boolean',\n  delay: 'number'\n}\n\nconst Default = {\n  animation: true,\n  autohide: true,\n  delay: 5000\n}\n\nconst SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"toast\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Toast extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._config = this._getConfig(config)\n    this._timeout = null\n    this._hasMouseInteraction = false\n    this._hasKeyboardInteraction = false\n    this._setListeners()\n  }\n\n  // Getters\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  show() {\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._clearTimeout()\n\n    if (this._config.animation) {\n      this._element.classList.add(CLASS_NAME_FADE)\n    }\n\n    const complete = () => {\n      this._element.classList.remove(CLASS_NAME_SHOWING)\n      this._element.classList.add(CLASS_NAME_SHOW)\n\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n\n      this._maybeScheduleHide()\n    }\n\n    this._element.classList.remove(CLASS_NAME_HIDE)\n    reflow(this._element)\n    this._element.classList.add(CLASS_NAME_SHOWING)\n\n    this._queueCallback(complete, this._element, this._config.animation)\n  }\n\n  hide() {\n    if (!this._element.classList.contains(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const complete = () => {\n      this._element.classList.add(CLASS_NAME_HIDE)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n    this._queueCallback(complete, this._element, this._config.animation)\n  }\n\n  dispose() {\n    this._clearTimeout()\n\n    if (this._element.classList.contains(CLASS_NAME_SHOW)) {\n      this._element.classList.remove(CLASS_NAME_SHOW)\n    }\n\n    super.dispose()\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' && config ? config : {})\n    }\n\n    typeCheckConfig(NAME, config, this.constructor.DefaultType)\n\n    return config\n  }\n\n  _maybeScheduleHide() {\n    if (!this._config.autohide) {\n      return\n    }\n\n    if (this._hasMouseInteraction || this._hasKeyboardInteraction) {\n      return\n    }\n\n    this._timeout = setTimeout(() => {\n      this.hide()\n    }, this._config.delay)\n  }\n\n  _onInteraction(event, isInteracting) {\n    switch (event.type) {\n      case 'mouseover':\n      case 'mouseout':\n        this._hasMouseInteraction = isInteracting\n        break\n      case 'focusin':\n      case 'focusout':\n        this._hasKeyboardInteraction = isInteracting\n        break\n      default:\n        break\n    }\n\n    if (isInteracting) {\n      this._clearTimeout()\n      return\n    }\n\n    const nextElement = event.relatedTarget\n    if (this._element === nextElement || this._element.contains(nextElement)) {\n      return\n    }\n\n    this._maybeScheduleHide()\n  }\n\n  _setListeners() {\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, () => this.hide())\n    EventHandler.on(this._element, EVENT_MOUSEOVER, event => this._onInteraction(event, true))\n    EventHandler.on(this._element, EVENT_MOUSEOUT, event => this._onInteraction(event, false))\n    EventHandler.on(this._element, EVENT_FOCUSIN, event => this._onInteraction(event, true))\n    EventHandler.on(this._element, EVENT_FOCUSOUT, event => this._onInteraction(event, false))\n  }\n\n  _clearTimeout() {\n    clearTimeout(this._timeout)\n    this._timeout = null\n  }\n\n  // Static\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Toast.getOrCreateInstance(this, config)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config](this)\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Toast to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Toast)\n\nexport default Toast\n","import React from 'react';\nimport { Event, SessionObj } from '../Routes/Event/event';\nimport { Tooltip } from '../assets/bootstrap-5.0.2-dist/js/bootstrap.esm';\n\ntype Props = {\n\tsessionsArr: SessionObj[];\n\tsetSessionsArr: (sessions: Array<SessionObj>) => void;\n\teventJSON: Event;\n\tsetEventJSON: (state: Event) => void;\n\tid: number;\n\trows: number;\n\tsetRows: (rows: number) => void;\n\tdefaultSessionType: string;\n\tdefaultHourOfDay: number;\n\tdefaultDayOfWeekend: number;\n\tdefaultTimeMultiplier: number;\n\tdefaultSessionDuration: number;\n};\n\nexport default function Sessions({\n\tsessionsArr,\n\tsetSessionsArr,\n\teventJSON,\n\tsetEventJSON,\n\tid,\n\trows,\n\tsetRows,\n\tdefaultSessionDuration,\n\tdefaultHourOfDay,\n\tdefaultDayOfWeekend,\n\tdefaultTimeMultiplier,\n\tdefaultSessionType,\n}: Props) {\n\tconst [addedToArray, setAdded] = React.useState(false); // Should only be changed once on initial load of Sessions element\n\tconst [sessionType, setSessionType] = React.useState(defaultSessionType); // set initial values inside useState(*Initial value*)\n\tconst [dayOfWeekend, setDayOfWeekend] = React.useState(defaultDayOfWeekend);\n\tconst [timeMulitplier, setTimeMulitplier] = React.useState(\n\t\tdefaultTimeMultiplier\n\t);\n\tconst [sessionDuration, setSessionDuration] = React.useState(\n\t\tdefaultSessionDuration\n\t);\n\tconst [hourOfDay, setHourOfDay] = React.useState(defaultHourOfDay);\n\tconst rowRef = React.useRef(rows);\n\trowRef.current = rows;\n\tconst tooltipDay: any = React.useRef();\n\tconst tooltipType: any = React.useRef();\n\tconst tooltipTime: any = React.useRef();\n\tconst tooltipDuration: any = React.useRef();\n\tconst tooltipTimeMultiplier: any = React.useRef();\n\n\tReact.useEffect(() => {\n\t\tvar tooltip = new Tooltip(tooltipDay.current, {\n\t\t\ttitle: 'Select the day for the session.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipType.current, {\n\t\t\ttitle: 'Select the type of session. If including a race, be sure to have either a practice or quali session before the race.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipTime.current, {\n\t\t\ttitle: 'Set the time of the current session.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipDuration.current, {\n\t\t\ttitle: 'Set the duration of the current session.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipTimeMultiplier.current, {\n\t\t\ttitle: 'Set the time multiplier of the current session.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\tif (addedToArray) {\n\t\t\t// Overwrite existing element in sessionArr\n\t\t\tlet selectedSession: SessionObj = {\n\t\t\t\thourOfDay: hourOfDay,\n\t\t\t\tsessionType: sessionType,\n\t\t\t\tdayOfWeekend: dayOfWeekend,\n\t\t\t\ttimeMulitplier: timeMulitplier,\n\t\t\t\tsessionDuration: sessionDuration,\n\t\t\t};\n\t\t\tsessionsArr[id] = selectedSession;\n\t\t\tsetEventJSON({ ...eventJSON, sessions: sessionsArr });\n\t\t} else {\n\t\t\tsetEventJSON({ ...eventJSON, sessions: sessionsArr });\n\t\t\tsetAdded(true);\n\t\t}\n\t}, [sessionType, hourOfDay, dayOfWeekend, timeMulitplier, sessionDuration]); // Add all form variables that require the object to be updated in this second parameter\n\n\tfunction handleClick() {\n\t\tfor (let i = 0; i < sessionsArr.length; i++) {\n\t\t\tif (i === id) {\n\t\t\t\tsetRows(rowRef.current - 1);\n\t\t\t\tsessionsArr.splice(id, 1);\n\t\t\t\tsetSessionsArr(sessionsArr);\n\t\t\t}\n\t\t}\n\n\t\t// setOpacity('');\n\t}\n\n\treturn (\n\t\t<div className={'bg-secondary rounded mb-3 p-3'}>\n\t\t\t<div className='row align-content-center '>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<h2>Session {id + 1}</h2>\n\t\t\t\t\t<div className='row '>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={tooltipType}\n\t\t\t\t\t\t\tclassName='col-2 d-flex flex-column justify-content-between mb-3'>\n\t\t\t\t\t\t\t<label>Session Type</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(e) => setSessionType(e.target.value)}\n\t\t\t\t\t\t\t\tname='sessionType'\n\t\t\t\t\t\t\t\tid='sessionType'\n\t\t\t\t\t\t\t\tvalue={sessionsArr[id].sessionType}>\n\t\t\t\t\t\t\t\t<option value='p'>Practice</option>\n\t\t\t\t\t\t\t\t<option value='q'>Quali</option>\n\t\t\t\t\t\t\t\t<option value='r'>Race</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={tooltipDay}\n\t\t\t\t\t\t\tclassName='col-2 d-flex flex-column justify-content-between mb-3'>\n\t\t\t\t\t\t\t<label>Session Day</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tlet parsedDate = parseInt(e.target.value);\n\t\t\t\t\t\t\t\t\tsetDayOfWeekend(parsedDate);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname='dayOfWeekend'\n\t\t\t\t\t\t\t\tid='dayOfWeekend'\n\t\t\t\t\t\t\t\tvalue={sessionsArr[id].dayOfWeekend}>\n\t\t\t\t\t\t\t\t<option value='1'>Friday</option>\n\t\t\t\t\t\t\t\t<option value='2'>Saturday</option>\n\t\t\t\t\t\t\t\t<option value='3'>Sunday</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={tooltipTime}\n\t\t\t\t\t\t\tclassName='col-2 d-flex flex-column justify-content-between mb-3'>\n\t\t\t\t\t\t\t<label>Session Start Time in Sim</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetHourOfDay(parseInt(e.target.value));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tvalue={sessionsArr[id].hourOfDay}\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tid='hourOfDay'\n\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\tmax='23'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={tooltipDuration}\n\t\t\t\t\t\t\tclassName='col-2 d-flex flex-column justify-content-between mb-3'>\n\t\t\t\t\t\t\t<label>Session Duration</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\tsetSessionDuration(parseInt(e.target.value))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tid='sessionDuration'\n\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\tmax='640'\n\t\t\t\t\t\t\t\tvalue={sessionsArr[id].sessionDuration}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={tooltipTimeMultiplier}\n\t\t\t\t\t\t\tclassName='col-2 d-flex flex-column justify-content-between mb-3'>\n\t\t\t\t\t\t\t<label>Time Mulitplier</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\tsetTimeMulitplier(parseInt(e.target.value))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tid='timeMulitplier'\n\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\tmax='60'\n\t\t\t\t\t\t\t\tvalue={sessionsArr[id].timeMulitplier}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-2 d-flex flex-column justify-content-around mb-3'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName='btn btn-lg bg-danger p-3'\n\t\t\t\t\t\t\t\tonClick={handleClick}>\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName='bi bi-trash fs-2'\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\t\t\t}}></i>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\ntype Props = {\n\ttype: string;\n\tname: string;\n\tvalueName?: string | number;\n\tlabel: string;\n\thandledChange: any;\n\tmin?: number;\n\tmax?: number;\n\tisChecked?: any;\n\trefs?: any;\n};\n\nexport default function Input({\n\ttype,\n\tname,\n\tvalueName,\n\tlabel,\n\thandledChange,\n\tmin,\n\tmax,\n\tisChecked,\n\trefs,\n}: Props) {\n\treturn (\n\t\t<div\n\t\t\tclassName={\n\t\t\t\t(name !== 'password' && type === 'text') ||\n\t\t\t\t(type === 'checkbox' && valueName === 'mandatoryPit')\n\t\t\t\t\t? 'col-2 p-3 form-group'\n\t\t\t\t\t: 'col p-3 form-group'\n\t\t\t}\n\t\t\tref={refs}>\n\t\t\t<label className='m-2' htmlFor={name}>\n\t\t\t\t{label}\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName='text-center'\n\t\t\t\ttype={type}\n\t\t\t\tname={name}\n\t\t\t\tid={name}\n\t\t\t\tvalue={valueName}\n\t\t\t\tonChange={handledChange}\n\t\t\t\tmin={min}\n\t\t\t\tmax={max}\n\t\t\t\tchecked={isChecked}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import React, { ChangeEvent } from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport Sessions from '../../components/Sessions';\nimport TrackList from './tracks.json';\nimport Input from '../../components/Input';\nimport { Tooltip } from '../../assets/bootstrap-5.0.2-dist/js/bootstrap.esm';\n\nexport interface SessionObj {\n\thourOfDay: number;\n\tdayOfWeekend: number;\n\ttimeMulitplier: number;\n\tsessionType: string;\n\tsessionDuration: number;\n}\nexport interface Event {\n\ttrack: string;\n\tpreRaceWaitingTimeSeconds: number;\n\tsessionOverTimeSeconds: number;\n\tambientTemp: number;\n\tcloudLevel: number;\n\train: number;\n\tweatherRandomness: number;\n\tconfigVersion: number;\n\tsessions: SessionObj[];\n}\n\nconst defaultSession: SessionObj = {\n\thourOfDay: 14,\n\tsessionType: 'p',\n\tdayOfWeekend: 1,\n\ttimeMulitplier: 1,\n\tsessionDuration: 20,\n};\n\nconst defaultEvent: Event = {\n\ttrack: TrackList[0].tracks[0].trackName,\n\tpreRaceWaitingTimeSeconds: 300,\n\tsessionOverTimeSeconds: 300,\n\tambientTemp: 20,\n\tcloudLevel: 0.1,\n\train: 0,\n\tweatherRandomness: 0,\n\tconfigVersion: 1,\n\tsessions: [defaultSession],\n};\n\ninterface Settings {\n\tserverName: string;\n\tadminPassword: string;\n\tcarGroup: string;\n\ttrackMedalsRequirement: number;\n\tsafetyRatingRequirement: number;\n\tracecraftRatingRequirement: number;\n\tpassword: string;\n\tspectatorPassword: string;\n\tmaxCarSlots: number;\n\tdumpLeaderboards: number;\n\tisRaceLocked: number;\n\trandomizeTrackWhenEmpty: number;\n\tallowAutoDQ: number;\n\tshortFormationLap: number;\n\tdumpEntryList: number;\n\tformationLapType: number;\n}\n\nconst defaultSettings: Settings = {\n\tserverName: '',\n\tadminPassword: '',\n\tcarGroup: 'FreeForAll',\n\ttrackMedalsRequirement: -1,\n\tsafetyRatingRequirement: -1,\n\tracecraftRatingRequirement: -1,\n\tpassword: '',\n\tspectatorPassword: '',\n\tmaxCarSlots: 24,\n\tdumpLeaderboards: 1,\n\tisRaceLocked: 1,\n\trandomizeTrackWhenEmpty: 0,\n\tallowAutoDQ: 1,\n\tshortFormationLap: 1,\n\tdumpEntryList: 1,\n\tformationLapType: 1,\n};\n\ninterface EventRules {\n\tqualifyStandingType: number;\n\tpitWindowLengthSec: number;\n\tmandatoryPitstopCount: number;\n\tisRefuellingAllowedInRace: boolean;\n\tisRefuellingTimeFixed: boolean;\n\tisMandatoryPitstopRefuellingRequired: boolean;\n\tisMandatoryPitstopTyreChangeRequired: boolean;\n\ttyreSetCount: number;\n\tdriverStintTimeSec: number;\n}\n\nconst defaultEventRules: EventRules = {\n\tqualifyStandingType: 1,\n\tpitWindowLengthSec: 0,\n\tmandatoryPitstopCount: 0,\n\tisRefuellingAllowedInRace: true,\n\tisRefuellingTimeFixed: false,\n\tisMandatoryPitstopRefuellingRequired: true,\n\tisMandatoryPitstopTyreChangeRequired: true,\n\ttyreSetCount: 40,\n\tdriverStintTimeSec: -1,\n};\n\nexport default function EventRoute() {\n\tconst [year, setYear] = useState(TrackList[0].year);\n\tconst [track, setTrack] = useState(TrackList[0].tracks[0].trackName);\n\tconst [eventJSON, setEventJSON] = useState(defaultEvent);\n\tconst [sessionsArr, setSessionsArr] = useState<Array<SessionObj>>([\n\t\tdefaultSession,\n\t]);\n\tconst [rows, setRows] = useState(1);\n\tconst [settingsJSON, setSettingsJSON] = useState(defaultSettings);\n\tconst [eventRulesJSON, setEventRulesJSON] = useState(defaultEventRules);\n\tconst [isPrivateServer, setIsPrivateServer] = useState(false);\n\tconst [mandatoryPit, setMandatoryPit] = useState(false);\n\n\tconst tooltipRef: any = useRef();\n\tconst tooltipServerName: any = useRef();\n\tconst tooltipAdminPass: any = useRef();\n\tconst tooltipSpecPass: any = useRef();\n\tconst tooltipCarGroup: any = useRef();\n\tconst tooltipTrackMedals: any = useRef();\n\tconst tooltipSafety: any = useRef();\n\tconst tooltipRaceCraft: any = useRef();\n\tconst tooltipCarSlots: any = useRef();\n\tconst tooltipTemp: any = useRef();\n\tconst tooltipClouds: any = useRef();\n\tconst tooltipRain: any = useRef();\n\tconst tooltipRandomness: any = useRef();\n\tconst tooltipTireSets: any = useRef();\n\tconst tooltipServerPassword: any = useRef();\n\tconst tooltipRefuelingAllowed: any = useRef();\n\tconst tooltipFixedRefuellingTime: any = useRef();\n\tconst tooltipNumberOfMandatoryPitstops: any = useRef();\n\tconst tooltipPitWindow: any = useRef();\n\tconst tooltipMandatoryTireChange: any = useRef();\n\tconst tooltipMandatoryRefuelling: any = useRef();\n\n\tuseEffect(() => {\n\t\tvar tooltip = new Tooltip(tooltipRef.current, {\n\t\t\ttitle: 'What up',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipServerName.current, {\n\t\t\ttitle: 'Enter the name of the server',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipAdminPass.current, {\n\t\t\ttitle: 'The password you specify allows a driver or spectator to log in as Server Admin in the chat window of the server',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipSpecPass.current, {\n\t\t\ttitle: 'Password to enter the server as spectator. Must be different to “password” if both is set.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipCarGroup.current, {\n\t\t\ttitle: 'Defines the car group for this server.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipTrackMedals.current, {\n\t\t\ttitle: 'Defines the amount of track medals that a user has to have for the given track. Set to -1 to disable by default.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipSafety.current, {\n\t\t\ttitle: 'Defines the Safety Rating (SA) that a user must have to join this server. Select anywhere from -1 - 99. Set to -1 to disable by default.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipRaceCraft.current, {\n\t\t\ttitle: 'Defines the Racecraft Rating (RC) that a user must have to join this server. Select anywhere from -1 - 99. Set to -1 to disable by default.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipCarSlots.current, {\n\t\t\ttitle: 'Password to enter the server as spectator. Must be different to “password” if both is set.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipTemp.current, {\n\t\t\ttitle: 'Sets the baseline ambient temperature in °C.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipClouds.current, {\n\t\t\ttitle: 'Sets the baseline cloud level',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipRain.current, {\n\t\t\ttitle: 'If weather randomness is off, defines the static rain level. With dynamic weather, it increases the rain chance. Values greater than 1 can override the value of the cloud level.',\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\t\ttooltip = new Tooltip(tooltipRandomness.current, {\n\t\t\thtml: true,\n\t\t\ttitle: `<div>\n\t\t\t<h6>Sets the dynamic weather level</h3>\n\t\t\t<ul>\n\t\t\t\t<li>0 = Static Weather</li>\n\t\t\t\t<li>1-4 = fairly realistic weather</li>\n\t\t\t\t<li>5-7 = more sensational</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t\t\tplacement: 'top',\n\t\t\ttrigger: 'hover',\n\t\t});\n\n\t\tif (isPrivateServer) {\n\t\t\ttooltip = new Tooltip(tooltipServerPassword.current, {\n\t\t\t\ttitle: 'Set server to private by adding a password to enable event rules features.',\n\t\t\t\tplacement: 'top',\n\t\t\t\ttrigger: 'hover',\n\t\t\t});\n\t\t\ttooltip = new Tooltip(tooltipTireSets.current, {\n\t\t\t\ttitle: 'Set the number of tire sets for the race weekend',\n\t\t\t\tplacement: 'top',\n\t\t\t\ttrigger: 'hover',\n\t\t\t});\n\t\t\ttooltip = new Tooltip(tooltipRefuelingAllowed.current, {\n\t\t\t\ttitle: 'Set whether refeulling is allowed or not.',\n\t\t\t\tplacement: 'top',\n\t\t\t\ttrigger: 'hover',\n\t\t\t});\n\t\t\ttooltip = new Tooltip(tooltipFixedRefuellingTime.current, {\n\t\t\t\ttitle: 'Set whether refeulling is set to a fixed time. Used to negate fuel advantages from other cars',\n\t\t\t\tplacement: 'top',\n\t\t\t\ttrigger: 'hover',\n\t\t\t});\n\t\t\tif (mandatoryPit) {\n\t\t\t\ttooltip = new Tooltip(\n\t\t\t\t\ttooltipNumberOfMandatoryPitstops.current,\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: 'Set the number of mandatory stops in the race. ',\n\t\t\t\t\t\tplacement: 'top',\n\t\t\t\t\t\ttrigger: 'hover',\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\ttooltip = new Tooltip(tooltipPitWindow.current, {\n\t\t\t\t\ttitle: 'Set the length of the pit window.',\n\t\t\t\t\tplacement: 'top',\n\t\t\t\t\ttrigger: 'hover',\n\t\t\t\t});\n\t\t\t\ttooltip = new Tooltip(tooltipMandatoryTireChange.current, {\n\t\t\t\t\ttitle: 'Set whether a tire change is mandatory in the race.',\n\t\t\t\t\tplacement: 'top',\n\t\t\t\t\ttrigger: 'hover',\n\t\t\t\t});\n\t\t\t\ttooltip = new Tooltip(tooltipMandatoryRefuelling.current, {\n\t\t\t\t\ttitle: 'Set whether refuelling is mandatory in the race. ',\n\t\t\t\t\tplacement: 'top',\n\t\t\t\t\ttrigger: 'hover',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction handleSelectTrack(\n\t\tevent:\n\t\t\t| React.ChangeEvent<HTMLInputElement>\n\t\t\t| React.ChangeEvent<HTMLSelectElement>\n\t): void {\n\t\tif (event.target.id === 'cloudLevel' || event.target.id === 'rain') {\n\t\t\tlet rounded = parseInt(event.target.value) / 10;\n\t\t\tsetEventJSON({\n\t\t\t\t...eventJSON,\n\t\t\t\t[event.target.id]: rounded,\n\t\t\t});\n\t\t} else if (event.target.id === 'weatherRandomness') {\n\t\t\tlet parsed = parseInt(event.target.value);\n\t\t\tsetEventJSON({\n\t\t\t\t...eventJSON,\n\t\t\t\t[event.target.id]: parsed,\n\t\t\t});\n\t\t} else if (event.target.id === 'track') {\n\t\t\tsetTrack(event.target.value);\n\t\t\tsetEventJSON({\n\t\t\t\t...eventJSON,\n\t\t\t\t[event.target.id]: event.target.value,\n\t\t\t});\n\t\t} else {\n\t\t\tsetEventJSON({\n\t\t\t\t...eventJSON,\n\t\t\t\t[event.target.id]: event.target.value,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleYearChange(event: ChangeEvent<HTMLSelectElement>): void {\n\t\tconst selectedYear = parseInt(event.target.value);\n\t\tsetYear((y) => selectedYear);\n\t\tfor (let i = 0; i < TrackList.length; i++) {\n\t\t\tif (TrackList[i].year === selectedYear) {\n\t\t\t\tsetTrack(TrackList[i].tracks[0].trackName);\n\t\t\t\tsetEventJSON({\n\t\t\t\t\t...eventJSON,\n\t\t\t\t\ttrack: TrackList[i].tracks[0].trackName,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleSettingsJSON(\n\t\tevent: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLSelectElement>\n\t): void {\n\t\tif (\n\t\t\tevent.target.id === 'trackMedalsRequirement' ||\n\t\t\tevent.target.id === 'safetyRatingRequirement' ||\n\t\t\tevent.target.id === 'racecraftRatingRequirement' ||\n\t\t\tevent.target.id === 'maxCarSlots'\n\t\t) {\n\t\t\tsetSettingsJSON({\n\t\t\t\t...settingsJSON,\n\t\t\t\t[event.target.id]: parseInt(event.target.value),\n\t\t\t});\n\t\t} else {\n\t\t\tsetSettingsJSON({\n\t\t\t\t...settingsJSON,\n\t\t\t\t[event.target.id]: event.target.value,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleCheckboxJSON(event: ChangeEvent<HTMLInputElement>) {\n\t\tif (isPrivateServer) {\n\t\t\tsetIsPrivateServer(false);\n\t\t\tsetSettingsJSON({\n\t\t\t\t...settingsJSON,\n\t\t\t\tpassword: '',\n\t\t\t});\n\t\t} else {\n\t\t\tsetIsPrivateServer(true);\n\t\t}\n\t}\n\n\tfunction handleEventRules(event: ChangeEvent<HTMLInputElement>) {\n\t\tif (event.target.id === 'tyreSetCount') {\n\t\t\tlet parsed = parseInt(event.target.value);\n\t\t\tsetEventRulesJSON({\n\t\t\t\t...eventRulesJSON,\n\t\t\t\t[event.target.id]: parsed,\n\t\t\t});\n\t\t} else if (event.target.id === 'pitWindowLengthSec') {\n\t\t\tlet convertedToSec = parseInt(event.target.value) * 60;\n\t\t\tsetEventRulesJSON({\n\t\t\t\t...eventRulesJSON,\n\t\t\t\t[event.target.id]: convertedToSec,\n\t\t\t});\n\t\t} else if (\n\t\t\tevent.target.id === 'isRefuellingAllowedInRace' ||\n\t\t\tevent.target.id === 'isRefuellingTimeFixed' ||\n\t\t\tevent.target.id === 'isMandatoryPitstopRefuellingRequired' ||\n\t\t\tevent.target.id === 'isMandatoryPitstopTyreChangeRequired'\n\t\t) {\n\t\t\tif (eventRulesJSON[event.target.id]) {\n\t\t\t\tsetEventRulesJSON({\n\t\t\t\t\t...eventRulesJSON,\n\t\t\t\t\t[event.target.id]: false,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetEventRulesJSON({\n\t\t\t\t\t...eventRulesJSON,\n\t\t\t\t\t[event.target.id]: true,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tsetEventRulesJSON({\n\t\t\t\t...eventRulesJSON,\n\t\t\t\t[event.target.id]: event.target.value,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleCheckboxes(event: ChangeEvent<HTMLInputElement>) {\n\t\tif (event.target.id === 'mandatoryPit') {\n\t\t\tif (mandatoryPit) {\n\t\t\t\tsetMandatoryPit(false);\n\t\t\t\tsetEventRulesJSON({\n\t\t\t\t\t...eventRulesJSON,\n\t\t\t\t\tmandatoryPitstopCount: 0,\n\t\t\t\t\tisMandatoryPitstopTyreChangeRequired: false,\n\t\t\t\t\tisMandatoryPitstopRefuellingRequired: false,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetMandatoryPit(true);\n\t\t\t\tsetEventRulesJSON({\n\t\t\t\t\t...eventRulesJSON,\n\t\t\t\t\tmandatoryPitstopCount: 1,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<h1 className='h1 text-center mt-5' ref={tooltipRef}>\n\t\t\t\t\t\tACC Server Setup Tool\n\t\t\t\t\t</h1>\n\t\t\t\t\t<div className='row align-items-start justify-content-evenly'>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\trefs={tooltipServerName}\n\t\t\t\t\t\t\tname='serverName'\n\t\t\t\t\t\t\tvalueName={settingsJSON.serverName}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\thandledChange={handleSettingsJSON}\n\t\t\t\t\t\t\tlabel='Server Name'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='col-2 p-3 form-group'\n\t\t\t\t\t\t\tref={tooltipCarGroup}>\n\t\t\t\t\t\t\t<label className='p-2' htmlFor='carGroup'>\n\t\t\t\t\t\t\t\tCar Group\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tname='carGroup'\n\t\t\t\t\t\t\t\tid='carGroup'\n\t\t\t\t\t\t\t\tonChange={handleSettingsJSON}>\n\t\t\t\t\t\t\t\t<option value='FreeForAll' selected>\n\t\t\t\t\t\t\t\t\tAll Cars\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option value='GT3'>GT3</option>\n\t\t\t\t\t\t\t\t<option value='GT4'>GT4</option>\n\t\t\t\t\t\t\t\t<option value='Cup'>Porsche Cup</option>\n\t\t\t\t\t\t\t\t<option value='ST'>Super Trofeo</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\trefs={tooltipAdminPass}\n\t\t\t\t\t\t\tlabel='Admin Password'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='adminPassword'\n\t\t\t\t\t\t\tvalueName={settingsJSON.adminPassword}\n\t\t\t\t\t\t\thandledChange={handleSettingsJSON}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\trefs={tooltipSpecPass}\n\t\t\t\t\t\t\tlabel='Spectator Password'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='spectatorPassword'\n\t\t\t\t\t\t\tvalueName={settingsJSON.spectatorPassword}\n\t\t\t\t\t\t\thandledChange={handleSettingsJSON}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='row text-center mt-4'>\n\t\t\t\t\t\t<h2>Server Requirements</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='row align-items-start justify-content-evenly'>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\trefs={tooltipTrackMedals}\n\t\t\t\t\t\t\tlabel='Track Medals'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tname='trackMedalsRequirement'\n\t\t\t\t\t\t\tmin={-1}\n\t\t\t\t\t\t\tmax={3}\n\t\t\t\t\t\t\tvalueName={settingsJSON.trackMedalsRequirement}\n\t\t\t\t\t\t\thandledChange={handleSettingsJSON}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\trefs={tooltipSafety}\n\t\t\t\t\t\t\tlabel='Safety Rating'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tname='safetyRatingRequirement'\n\t\t\t\t\t\t\tmin={-1}\n\t\t\t\t\t\t\tmax={99}\n\t\t\t\t\t\t\tvalueName={settingsJSON.safetyRatingRequirement}\n\t\t\t\t\t\t\thandledChange={handleSettingsJSON}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\trefs={tooltipRaceCraft}\n\t\t\t\t\t\t\tlabel='Racecraft Rating'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tname='racecraftRatingRequirement'\n\t\t\t\t\t\t\tmin={-1}\n\t\t\t\t\t\t\tmax={99}\n\t\t\t\t\t\t\tvalueName={settingsJSON.racecraftRatingRequirement}\n\t\t\t\t\t\t\thandledChange={handleSettingsJSON}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\trefs={tooltipCarSlots}\n\t\t\t\t\t\t\tlabel='Car Slots'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tname='maxCarSlots'\n\t\t\t\t\t\t\tmin={10}\n\t\t\t\t\t\t\tmax={99}\n\t\t\t\t\t\t\tvalueName={settingsJSON.maxCarSlots}\n\t\t\t\t\t\t\thandledChange={handleSettingsJSON}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='row text-center mt-4'>\n\t\t\t\t\t\t\t<h2>Select Track</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row  justify-content-evenly'>\n\t\t\t\t\t\t\t<div className='col-4 p-3 form-group'>\n\t\t\t\t\t\t\t\t<label className='p-2' htmlFor='year'>\n\t\t\t\t\t\t\t\t\tSelect Year\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tname='year'\n\t\t\t\t\t\t\t\t\tid='year'\n\t\t\t\t\t\t\t\t\tvalue={year}\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleYearChange(e)}>\n\t\t\t\t\t\t\t\t\t{TrackList.map((year) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={year.year}\n\t\t\t\t\t\t\t\t\t\t\t\tid={`${year.year}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t{year.year}\n\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='col-4 p-3 form-group'>\n\t\t\t\t\t\t\t\t<label className='p-2' htmlFor='track'>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\tSelect Track{' '}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tname='track'\n\t\t\t\t\t\t\t\t\tid='track'\n\t\t\t\t\t\t\t\t\tvalue={track}\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleSelectTrack(e)}>\n\t\t\t\t\t\t\t\t\t{TrackList.map((track) => {\n\t\t\t\t\t\t\t\t\t\tif (year === track.year) {\n\t\t\t\t\t\t\t\t\t\t\treturn track.tracks.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(track, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrack.trackName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{track.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='row my-3'>\n\t\t\t\t\t\t<div className='col text-center mt-4'>\n\t\t\t\t\t\t\t<h2>Set up the weather</h2>\n\t\t\t\t\t\t\t<div className='row justify-content-evenly align-center my-3'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\trefs={tooltipTemp}\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tlabel='Temp'\n\t\t\t\t\t\t\t\t\tname='ambientTemp'\n\t\t\t\t\t\t\t\t\tvalueName={eventJSON.ambientTemp}\n\t\t\t\t\t\t\t\t\thandledChange={handleSelectTrack}\n\t\t\t\t\t\t\t\t\tmin={15}\n\t\t\t\t\t\t\t\t\tmax={42}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\trefs={tooltipClouds}\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tlabel='Clouds'\n\t\t\t\t\t\t\t\t\tname='cloudLevel'\n\t\t\t\t\t\t\t\t\tvalueName={eventJSON.cloudLevel * 10}\n\t\t\t\t\t\t\t\t\thandledChange={handleSelectTrack}\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tmax={10}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\trefs={tooltipRain}\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tlabel='Rain'\n\t\t\t\t\t\t\t\t\tname='rain'\n\t\t\t\t\t\t\t\t\tvalueName={eventJSON.rain}\n\t\t\t\t\t\t\t\t\thandledChange={handleSelectTrack}\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tmax={10}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\trefs={tooltipRandomness}\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tlabel='Randomness'\n\t\t\t\t\t\t\t\t\tname='weatherRandomness'\n\t\t\t\t\t\t\t\t\tvalueName={eventJSON.weatherRandomness}\n\t\t\t\t\t\t\t\t\thandledChange={handleSelectTrack}\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tmax={10}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='row  justify-content-evenly'>\n\t\t\t\t\t\t<div className='col py-3'>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Is this a private server?'\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tname='privateServer'\n\t\t\t\t\t\t\t\tisChecked={isPrivateServer}\n\t\t\t\t\t\t\t\thandledChange={handleCheckboxJSON}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{isPrivateServer && (\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\trefs={tooltipServerPassword}\n\t\t\t\t\t\t\t\tlabel='Server Password'\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalueName={settingsJSON.password}\n\t\t\t\t\t\t\t\thandledChange={handleSettingsJSON}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t{isPrivateServer && (\n\t\t\t\t\t\t<div className='row  justify-content-evenly'>\n\t\t\t\t\t\t\t<div className='col text-center mt-4'>\n\t\t\t\t\t\t\t\t<h2>Event Rules</h2>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='row align-center'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\trefs={tooltipTireSets}\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tname='tyreSetCount'\n\t\t\t\t\t\t\t\t\tvalueName={eventRulesJSON.tyreSetCount}\n\t\t\t\t\t\t\t\t\tlabel='Tire Sets'\n\t\t\t\t\t\t\t\t\thandledChange={handleEventRules}\n\t\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\trefs={tooltipRefuelingAllowed}\n\t\t\t\t\t\t\t\t\tlabel='Is refuelling Allowed?'\n\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\tname='isRefuellingAllowedInRace'\n\t\t\t\t\t\t\t\t\tisChecked={\n\t\t\t\t\t\t\t\t\t\teventRulesJSON.isRefuellingAllowedInRace\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandledChange={handleEventRules}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\trefs={tooltipFixedRefuellingTime}\n\t\t\t\t\t\t\t\t\tlabel='Fixed Refuelling Time? '\n\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\tname='isRefuellingTimeFixed'\n\t\t\t\t\t\t\t\t\tisChecked={\n\t\t\t\t\t\t\t\t\t\teventRulesJSON.isRefuellingTimeFixed\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandledChange={handleEventRules}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Mandatory Pit?'\n\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\tname='mandatoryPit'\n\t\t\t\t\t\t\t\t\tisChecked={mandatoryPit}\n\t\t\t\t\t\t\t\t\thandledChange={handleCheckboxes}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{mandatoryPit && (\n\t\t\t\t\t\t\t\t<div className='row justify-content-evenly align-center'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\trefs={tooltipNumberOfMandatoryPitstops}\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tname='mandatoryPitstopCount'\n\t\t\t\t\t\t\t\t\t\tvalueName={\n\t\t\t\t\t\t\t\t\t\t\teventRulesJSON.mandatoryPitstopCount\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel='Number of Pit Stops'\n\t\t\t\t\t\t\t\t\t\thandledChange={handleEventRules}\n\t\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\t\tmax={30}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\trefs={tooltipPitWindow}\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tname='pitWindowLengthSec'\n\t\t\t\t\t\t\t\t\t\tvalueName={\n\t\t\t\t\t\t\t\t\t\t\teventRulesJSON.pitWindowLengthSec /\n\t\t\t\t\t\t\t\t\t\t\t60\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel='Pit Window'\n\t\t\t\t\t\t\t\t\t\thandledChange={handleEventRules}\n\t\t\t\t\t\t\t\t\t\tmin={5}\n\t\t\t\t\t\t\t\t\t\tmax={90}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\trefs={tooltipMandatoryTireChange}\n\t\t\t\t\t\t\t\t\t\tlabel='Mandatory Tire Change'\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\tname='isMandatoryPitstopTyreChangeRequired'\n\t\t\t\t\t\t\t\t\t\tisChecked={\n\t\t\t\t\t\t\t\t\t\t\teventRulesJSON.isMandatoryPitstopTyreChangeRequired\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\thandledChange={handleEventRules}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\trefs={tooltipMandatoryRefuelling}\n\t\t\t\t\t\t\t\t\t\tlabel='Mandatory Refuelling'\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\tname='isMandatoryPitstopRefuellingRequired'\n\t\t\t\t\t\t\t\t\t\tisChecked={\n\t\t\t\t\t\t\t\t\t\t\teventRulesJSON.isMandatoryPitstopRefuellingRequired\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\thandledChange={handleEventRules}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=''>\n\t\t\t\t\t{sessionsArr.map((session, index) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tsessionType,\n\t\t\t\t\t\t\thourOfDay,\n\t\t\t\t\t\t\tdayOfWeekend,\n\t\t\t\t\t\t\ttimeMulitplier,\n\t\t\t\t\t\t\tsessionDuration,\n\t\t\t\t\t\t} = sessionsArr[index];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Sessions\n\t\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tdefaultSessionType={sessionType}\n\t\t\t\t\t\t\t\tdefaultHourOfDay={hourOfDay}\n\t\t\t\t\t\t\t\tdefaultDayOfWeekend={dayOfWeekend}\n\t\t\t\t\t\t\t\tdefaultTimeMultiplier={timeMulitplier}\n\t\t\t\t\t\t\t\tdefaultSessionDuration={sessionDuration}\n\t\t\t\t\t\t\t\tsessionsArr={sessionsArr}\n\t\t\t\t\t\t\t\tsetSessionsArr={setSessionsArr}\n\t\t\t\t\t\t\t\teventJSON={eventJSON}\n\t\t\t\t\t\t\t\tsetEventJSON={setEventJSON}\n\t\t\t\t\t\t\t\trows={rows}\n\t\t\t\t\t\t\t\tsetRows={setRows}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tclassName='btn btn-lg bg-success '\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSessionsArr((prev) => [...prev, defaultSession]);\n\t\t\t\t\t\tconsole.log(sessionsArr);\n\t\t\t\t\t\tsetEventJSON({ ...eventJSON, sessions: sessionsArr });\n\t\t\t\t\t\tsetRows(rows + 1);\n\t\t\t\t\t}}>\n\t\t\t\t\t<i className='bi bi-plus-lg' style={{ color: 'white' }}></i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className='m-3 row'>\n\t\t\t\t<p>\n\t\t\t\t\tAfter you have all of your desired settings, download the\n\t\t\t\t\tfiles below and put them in the folder where your server\n\t\t\t\t\tfiles are.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className='mt-5 row justify-content-evenly'>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`data:text/json;charset=utf-8,${encodeURIComponent(\n\t\t\t\t\t\t\tJSON.stringify(eventJSON, null, 2)\n\t\t\t\t\t\t)}`}\n\t\t\t\t\t\tdownload='event.json'>\n\t\t\t\t\t\t<button className='btn btn-lg bg-primary mb-5'>\n\t\t\t\t\t\t\tDownload Event JSON\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`data:text/json;charset=utf-8,${encodeURIComponent(\n\t\t\t\t\t\t\tJSON.stringify(settingsJSON, null, 2)\n\t\t\t\t\t\t)}`}\n\t\t\t\t\t\tdownload='settings.json'>\n\t\t\t\t\t\t<button className='btn btn-lg bg-secondary mx-3 mb-5'>\n\t\t\t\t\t\t\tDownload Settings JSON\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={`data:text/json;charset=utf-8,${encodeURIComponent(\n\t\t\t\t\t\t\tJSON.stringify(eventRulesJSON, null, 2)\n\t\t\t\t\t\t)}`}\n\t\t\t\t\t\tdownload='eventrules.json'>\n\t\t\t\t\t\t<button className='btn btn-lg bg-info mb-5'>\n\t\t\t\t\t\t\tDownload Event Rules JSON\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\tFor any feature requests or bugs, send an email to{' '}\n\t\t\t\t\t<a href='mailto:admin@slipstreamracing.net'>\n\t\t\t\t\t\tadmin@slipstreamracing.net\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport Event from './Routes/Event/event';\n\nfunction App() {\n\treturn (\n\t\t<div className='container-sm'>\n\t\t\t<Event />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}